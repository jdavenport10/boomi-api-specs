{
  "swagger": "2.0",
  "info": {
    "title": "STEP REST API V2",
    "version": "1.4.0"
  },
  "basePath": "/restapiv2",
  "externalDocs": {
    "url": "http://",
    "description": "<h1>About</h1><p>The STEP REST API V2 provides read and write access to a set of core STEP objects using the HTTP operations GET, PUT, POST, PATCH and DELETE.</p><h1>Resource Representation</h1><p>With the exception of a few resource operations for retrieving and uploading binary data, all request and response bodies are JSON, compliant with the schema documented here.</p><h1>Context and Workspace</h1><p>All requests are handled in a specific STEP context and workspace and both can be specified via query parameters available for all resource operations. A context must always be specified while requests per default will be handled in the &quot;Main&quot; workspace.</p><h1>Polymorphism</h1><p>In STEP, attributes, reference types and data container types can all be either single- or multivalued. The STEP REST API V2 uses polymorphism to address this complexity with resources that include values, references and data containers specified to produce and consume a common &quot;abstract&quot; supertype that always will be one of either the single- or multivalued subtype.<br/>As an example, the GET /entities/{id}/values/{attributeId} resource operation is specified to return a &quot;Value&quot; but as evident from the model, the &quot;Value&quot; will always be &quot;oneOf&quot; either &quot;SingleValue&quot;, that has a &quot;value&quot; property for which the value is an object, or &quot;MultiValue&quot;, that has a &quot;values&quot; property for which the value is an array.<br/>Clients are advised to use the presence or absence of the plural array property (&quot;values&quot;, &quot;references&quot; and &quot;dataContainers&quot;) to determine the concrete type.</p><h1>Authentication</h1><p>In the current release, the only supported authentication option is Basic Authentication. With Basic Authentication, user name and password are supplied with each request and it is therefore highly recommended to only use the API in conjunction with HTTPS.</p><h1>Versioning</h1><p>The STEP REST API V2 is versioned using semantic versioning. Stibo Systems reserve the right to make non-breaking, minor / patch changes in any release without warning and clients must be coded / configured to be 'tolerant' and capable of handling such changes.</p><p>Examples of breaking, major changes:</p><ul><li>Renaming of a property</li><li>Removal of a property</li><li>Property type change</li><li>Addition of new property required for write operations</li><li>Marking existing property as required for write operations</li><li>Removal of resource or resource operation</li><li>Materially different behavior for existing resource operation</li></ul><p>Examples of non-breaking, minor / patch changes:</p><ul><li>Addition of new properties in request responses</li><li>Addition of new query parameter not required for write operations</li><li>Addition of new resource or resource operation</li><li>Bug fixes that do not change the schema or resource operations as described here</li><li>Inclusion of a response body for resource operations specified to return a 200 response with no body</li><li>Change of response &quot;Model&quot; / &quot;schema&quot; to type extending the previously specified type</li><li>Renaming a &quot;Model&quot; / &quot;schema&quot; type</li></ul><p>In addition, error message texts may change without warning within the same version. Client program logic should not depend upon the message content.</p><h1>Error Handling</h1><p>The STEP REST API V2 responds with standard HTTP status codes, with 2** responses indicating a success, 4** responses indicating a client error and 5** indicating a server error. Notice that this specification does not specify common error responses like 500 (internal server error) or 401 (unauthorized) for the individual resource operations. Clients should however be capable of handling such responses.</p><p>Error responses have a JSON response body (see Error schema below) containing HTTP status code information in addition to a message providing details about the error. As mentioned above, client program logic should not depend upon the message content.</p><p>The specific status codes used in the API are:</p><ul><li>200 (OK): Success, response may or may not have a body</li><li>201 (Created): Entity successfully created, response may or may not have a body</li><li>400 (Bad request): The server cannot or will not process the request due to an apparent client error</li><li>401 (Unauthorized): Returned only in relation to failed authentication</li><li>404 (Not Found): Returned only in relation to objects specified via path parameters (variable parts of the URL). If STEP objects referenced in request bodies or via query parameters cannot be found, the response will be 400.</li><li>429 (Too Many Requests): Clients are per default limited to 100 requests per second. Returned if the rate limit is exceeded.</li><li>500 (Internal Server Error): Unexpected error (could potentially cover an issue that rightfully should be a 400)</li></ul>",
    "x-amf-title": "STEP REST API V2"
  },
  "paths": {
    "/assets": {
      "post": {
        "operationId": "CreatesanewassetobjectwithautogeneratedID",
        "description": "Operation for creating a new asset object with autogenerated ID. Object type and at least one parent classification must be specified in the request body. Further, an auto ID pattern must be configured for the object type. An \"id\" must not be supplied in the request body. Supplied \"contentMetadata\" will be ignored.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "An asset object",
              "example": {
                "value": {
                  "name": "ACX-3562",
                  "objectType": "ProductImage",
                  "classifications": [
                    "ProductImageRoot"
                  ],
                  "values": {
                    "AssetKeywords": {
                      "values": [
                        {
                          "value": "TV"
                        },
                        {
                          "value": "Television"
                        }
                      ]
                    }
                  }
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contentMetadata": {
                  "title": "contentMetadata",
                  "description": "Read-only asset content metadata values. Keys are attribute IDs and values simple string values.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "title": "name",
                  "description": "Asset name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the asset. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Asset values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the asset object",
                  "type": "string"
                },
                "classifications": {
                  "title": "classifications",
                  "description": "IDs of the classifications that the asset is linked into",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Asset object successfully created",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Asset object successfully created",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contentMetadata": {
                  "title": "contentMetadata",
                  "description": "Read-only asset content metadata values. Keys are attribute IDs and values simple string values.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "title": "name",
                  "description": "Asset name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the asset. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Asset values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the asset object",
                  "type": "string"
                },
                "classifications": {
                  "title": "classifications",
                  "description": "IDs of the classifications that the asset is linked into",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, an auto ID pattern is not configured for the specified object type, if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, an auto ID pattern is not configured for the specified object type, if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/assets/{id}": {
      "patch": {
        "operationId": "Partiallyupdatesanasset",
        "description": "Operation for updating multiple properties with a single request. The asset to update can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its value for the specified key. Contrary to the PUT /assets/{id} replace operation, this operation will only modify data present in the supplied request body.<br/>For both single and multivalued attributes, if a value representation is present in the request body, the existing value will be overwritten. Notice however that supplying the property \"contextLocal\" with the value \"false\" or the SingleValue \"calculated\" property with the value \"true\" will cause a value update to be ignored.<br/>For single valued reference types, existing references will be replaced with those provided in the request body. For multivalued reference types, if references in the request body match existing references, these will be replaced. Otherwise references in the request body will be added (i.e. existing references not in the request body will not be removed). As with values, if the property \"contextLocal\" is supplied with the value \"false\" for a reference, the update will be ignored.<br/>For asset classifications (the classifications that the asset is linked into), this resource operation will only add classifications and not remove existing ones not in the request body.<br/>This resource operation does not allow for the asset object type to be updated and also, supplied \"contentMetadata\" will be ignored. If an ID is supplied in the request body, it must match the ID of the asset identified via the URL.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset to update. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "An asset object",
              "example": {
                "value": {
                  "classifications": [
                    "ProductImageRoot"
                  ],
                  "values": {
                    "AssetKeywords": {
                      "values": [
                        {
                          "value": "TV"
                        }
                      ]
                    }
                  }
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contentMetadata": {
                  "title": "contentMetadata",
                  "description": "Read-only asset content metadata values. Keys are attribute IDs and values simple string values.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "title": "name",
                  "description": "Asset name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the asset. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Asset values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the asset object",
                  "type": "string"
                },
                "classifications": {
                  "title": "classifications",
                  "description": "IDs of the classifications that the asset is linked into",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset object successfully updated",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Asset object successfully updated",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contentMetadata": {
                  "title": "contentMetadata",
                  "description": "Read-only asset content metadata values. Keys are attribute IDs and values simple string values.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "title": "name",
                  "description": "Asset name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the asset. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Asset values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the asset object",
                  "type": "string"
                },
                "classifications": {
                  "title": "classifications",
                  "description": "IDs of the classifications that the asset is linked into",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "operationId": "CreatesorreplacesassetwithknownID",
        "description": "Operation for replacing an existing asset or creating a new asset with known ID. To avoid accidental replacement of existing assets, replacement will only be performed if the value \"true\" is supplied for the \"allow-overwrite\" query parameter. A 400 response is returned if the value for \"allow-overwrite\" is \"false\" and an asset with the specified ID already exists. When replacing, any data that is local to the working context (or not dimension dependent) and for which the client has write permissions will be overwritten and replaced with the data provided in the request body. Object type and at least one parent classification must always be specified in the request body. For the replace case, the asset can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its value for the specified key. A STEP ID is required for creating a new asset via this resource operation and a 400 response will therefore be returned if a \"keyId\" is supplied and the object does not exist in advance. If an ID is supplied in the request body, it must match the ID of the asset identified via the URL. Supplied \"contentMetadata\" will be ignored.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "allow-overwrite",
            "description": "Specifies whether the asset may be overwritten / replaced if it already exists. Defaults to \"false\".",
            "required": false,
            "in": "query",
            "default": false,
            "type": "boolean"
          },
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset to replace. If supplied, a key value should be supplied for the \"id\" path parameter. Cannot be used in combination with \"allow-overwrite=true\".",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "An asset object",
              "example": {
                "value": {
                  "name": "ACX-3562",
                  "objectType": "ProductImage",
                  "classifications": [
                    "ProductImageRoot"
                  ],
                  "values": {
                    "AssetKeywords": {
                      "values": [
                        {
                          "value": "TV"
                        },
                        {
                          "value": "Television"
                        }
                      ]
                    }
                  }
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contentMetadata": {
                  "title": "contentMetadata",
                  "description": "Read-only asset content metadata values. Keys are attribute IDs and values simple string values.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "title": "name",
                  "description": "Asset name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the asset. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Asset values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the asset object",
                  "type": "string"
                },
                "classifications": {
                  "title": "classifications",
                  "description": "IDs of the classifications that the asset is linked into",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Asset object successfully replaced",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Asset object successfully replaced",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contentMetadata": {
                  "title": "contentMetadata",
                  "description": "Read-only asset content metadata values. Keys are attribute IDs and values simple string values.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "title": "name",
                  "description": "Asset name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the asset. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Asset values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the asset object",
                  "type": "string"
                },
                "classifications": {
                  "title": "classifications",
                  "description": "IDs of the classifications that the asset is linked into",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, an asset with the specified ID already exists and the value for the query parameter \"allow-overwrite\" is \"false\", if a \"keyId\" is supplied and \"allow-overwrite\" is \"true\", if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, an asset with the specified ID already exists and the value for the query parameter \"allow-overwrite\" is \"false\", if a \"keyId\" is supplied and \"allow-overwrite\" is \"true\", if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "get": {
        "operationId": "ReturnstheassetwiththespecifiedID/keyvalue",
        "description": "Operation for retrieving information about a specific asset object. The asset can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Notice that the response does not contain asset content (binary data). Use GET /assets/{id}/content to retrieve the binary data.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The asset with the specified ID / key value",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The asset with the specified ID / key value",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contentMetadata": {
                  "title": "contentMetadata",
                  "description": "Read-only asset content metadata values. Keys are attribute IDs and values simple string values.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "title": "name",
                  "description": "Asset name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the asset. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Asset values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the asset object",
                  "type": "string"
                },
                "classifications": {
                  "title": "classifications",
                  "description": "IDs of the classifications that the asset is linked into",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "operationId": "DeletestheassetwiththespecifiedID/keyvalue",
        "description": "Operation for deleting a specific asset. The asset can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Operation can only be invoked in editable workspaces and will if successful move the asset to the recycle bin.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Asset successfully deleted (moved to recycle bin)"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the asset cannot be deleted due to constraints like the existence of references pointing to the asset, if invalid context or workspace information is supplied or if the operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the asset cannot be deleted due to constraints like the existence of references pointing to the asset, if invalid context or workspace information is supplied or if the operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/assets/{id}/incoming-references/{referenceTypeId}": {
      "get": {
        "operationId": "Returnsstreamofincomingreferencesofthespecifiedtype_0",
        "description": "Returns an array of incoming references (IncomingReferenceEntry) of the specified type as a stream. The asset can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve incoming references",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of incoming references of the specified type as a stream",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "An array of incoming references of the specified type as a stream",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IncomingReferenceEntry"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset or reference type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset or reference type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/assets/{id}/references/{referenceTypeId}": {
      "get": {
        "operationId": "Returnsreference(s)ofthespecifiedtype_0",
        "description": "Returns local reference(s) of the specified type owned by the asset. Response will either be an instance of SingleReference or MultiReference depending on whether the reference type is multivalued. The asset can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Either a MultiReference or SingleReference depending on whether the specified reference type is multivalued",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "Either a MultiReference or SingleReference depending on whether the specified reference type is multivalued"
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset or reference type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset or reference type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/assets/{id}/references/{referenceTypeId}/{targetId}": {
      "get": {
        "operationId": "Returnsaspecificreference_0",
        "description": "Returns the local reference (ReferenceEntry) of specified type from specified asset to specified target. The asset that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the target object can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the reference target",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A reference (ReferenceEntry) of specified type from specified asset to specified target",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "A reference (ReferenceEntry) of specified type from specified asset to specified target",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contextLocal": {
                  "title": "contextLocal",
                  "description": "Indicates whether the reference is set locally or inherited from a dimension point / a combination dimension points different from the ones used for current context. Should not be supplied for reference updates. If supplied with the value \"false\", the update will be skipped.",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "target": {
                  "title": "target",
                  "description": "ID of the target object",
                  "type": "string"
                },
                "targetType": {
                  "title": "targetType",
                  "description": "Target \"supertype\"",
                  "enum": [
                    "product",
                    "classification",
                    "asset",
                    "entity"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset, reference type, target or reference cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset, reference type, target or reference cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "operationId": "Replacesareference_0",
        "description": "Replaces the specified reference. If a locally defined reference to the same target already exists or if the reference type is single-valued and a locally defined reference from the source already exists, the \"allow-overwrite\" query parameter must be set to \"true\" in order for the existing reference to be replaced. The asset that owns / will own the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key. Notice that if \"target\" or \"targetType\" is supplied in the request body, the values must match the reference type and the STEP ID of the target specified in the URL. If the property \"contextLocal\" is supplied with the value \"false\", the update will be ignored.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset that owns / will own the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "allow-overwrite",
            "description": "Specifies whether existing references may be overwritten. This includes references of the same type to the same target and for single-valued reference types, references of the same type to any target. Defaults to \"false\".",
            "required": false,
            "in": "query",
            "default": false,
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "An atomic reference. Can represent both a \"cross reference\" and a \"classification product link\".",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contextLocal": {
                  "title": "contextLocal",
                  "description": "Indicates whether the reference is set locally or inherited from a dimension point / a combination dimension points different from the ones used for current context. Should not be supplied for reference updates. If supplied with the value \"false\", the update will be skipped.",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "target": {
                  "title": "target",
                  "description": "ID of the target object",
                  "type": "string"
                },
                "targetType": {
                  "title": "targetType",
                  "description": "Target \"supertype\"",
                  "enum": [
                    "product",
                    "classification",
                    "asset",
                    "entity"
                  ],
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The updated reference (ReferenceEntry). Returned when a local reference to the target existed in advance.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The updated reference (ReferenceEntry). Returned when a local reference to the target existed in advance.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contextLocal": {
                  "title": "contextLocal",
                  "description": "Indicates whether the reference is set locally or inherited from a dimension point / a combination dimension points different from the ones used for current context. Should not be supplied for reference updates. If supplied with the value \"false\", the update will be skipped.",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "target": {
                  "title": "target",
                  "description": "ID of the target object",
                  "type": "string"
                },
                "targetType": {
                  "title": "targetType",
                  "description": "Target \"supertype\"",
                  "enum": [
                    "product",
                    "classification",
                    "asset",
                    "entity"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, a/the reference exists and value for the query parameter \"allow-overwrite\" is \"false\", if the reference cannot be successfully created / updated based on information provided in the request body, if invalid context or workspace information is supplied, if operation is invoked in a terminated workspace or if \"target\" or \"targetType\" is supplied and the values do not match the target ID and reference type specified in the URL.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, a/the reference exists and value for the query parameter \"allow-overwrite\" is \"false\", if the reference cannot be successfully created / updated based on information provided in the request body, if invalid context or workspace information is supplied, if operation is invoked in a terminated workspace or if \"target\" or \"targetType\" is supplied and the values do not match the target ID and reference type specified in the URL.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset, reference type or target cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset, reference type or target cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "operationId": "Deletesthereference_0",
        "description": "Deletes the specified reference. Notice that it is only possible to delete references that are defined locally (\"contextLocal\": true). The asset that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the target object can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the reference target",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Reference successfully deleted"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the reference cannot be deleted due to a constraint, if an attempt is made to delete a reference that is not defined locally or if invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the reference cannot be deleted due to a constraint, if an attempt is made to delete a reference that is not defined locally or if invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset, reference type, target or reference cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset, reference type, target or reference cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/assets/{id}/references/{referenceTypeId}/{targetId}/values/{attributeId}": {
      "put": {
        "operationId": "Replacesthevalueforareferencemetadataattribute_0",
        "description": "Operation for replacing the value of an attribute on a local reference. It is only possible to replace values on references that are defined locally (\"contextLocal\": true). Request body must be either a SingleValue or a MultiValue depending on whether the attribute is multivalued. Notice that supplying the property \"contextLocal\" with the value \"false\" or the SingleValue \"calculated\" property with the value \"true\" will cause the value update to be ignored. The asset that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to replace the value",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "text/plain",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied, if an attempt is made to update a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied, if an attempt is made to update a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset, reference type, target, reference or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset, reference type, target, reference or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "get": {
        "operationId": "Returnsthevalueforareferencemetadataattribute_0",
        "description": "Returns the value for the specified attribute for the specified local reference. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued. The asset that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the target object can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to replace the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset, reference type, target, reference or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset, reference type, target, reference or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "operationId": "Deletesthevalueforareferencemetadataattribute_0",
        "description": "Operation for deleting the value of an attribute on a reference. Notice that it is only possible to delete non-calculated values on references that are defined locally (\"contextLocal\": true). The asset that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to replace the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied, if an attempt is made to delete a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied, if an attempt is made to delete a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset, reference type, target, reference or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset, reference type, target, reference or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/assets/{id}/approval-status": {
      "get": {
        "operationId": "ReturnstheapprovalstatusoftheassetwiththespecifiedID/keyvalue",
        "description": "Operation for retrieving the approval status of an asset. The asset can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Asset approval status",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Asset approval status",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "approvalStatus": {
                  "title": "approvalStatus",
                  "description": "The status",
                  "enum": [
                    "NotInApproved",
                    "PartlyApproved",
                    "ContextApproved",
                    "CompletelyApproved"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/assets/{id}/values/{attributeId}": {
      "delete": {
        "operationId": "Deletesthevalueforanassetattribute",
        "description": "Operation for deleting an asset attribute value. Notice that it is only possible to delete non-calculated, locally defined values. The asset can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to delete the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "operationId": "Replacesthevalueforanassetattribute",
        "description": "Operation for replacing an asset attribute value. Request body must be either a SingleValue or a MultiValue depending on whether the attribute is multivalued. Notice that supplying the property \"contextLocal\" with the value \"false\" or the SingleValue \"calculated\" property with the value \"true\" will cause the value update to be ignored. The asset can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to delete the value",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "text/plain",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "get": {
        "operationId": "Returnsthevalueforanassetattribute",
        "description": "Returns the value for the specified attribute. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued. The asset can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to delete the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/assets/{id}/content": {
      "get": {
        "operationId": "ReturnsassetcontentfortheassetwiththespecifiedID/keyvalue",
        "description": "Operation for retrieving asset content (binary data). The asset can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. For images, a converted version of the content can be obtained by supplying the ID of an image conversion configuration for the \"conversion-configuration-id\" query parameter.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "conversion-configuration-id",
            "description": "ID of a pre-configured image conversion configuration",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Binary data for the asset with the specified ID / key value",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "Binary data for the asset with the specified ID / key value",
              "type": "file"
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if invalid image conversion configuration information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if invalid image conversion configuration information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "operationId": "Replacesassetcontent",
        "description": "Operation for replacing the binary data content for an asset. The asset can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. An optional file name can be supplied via the \"fileName\" query parameter.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "fileName",
            "description": "Optional file name for the supplied binary data",
            "required": false,
            "in": "query",
            "default": "unknown",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "multipart/form-data",
            "in": "body",
            "name": "generated",
            "schema": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "body": {
                  "title": "body",
                  "type": "file"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset content successfully replaced"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/assets/{id}/approve": {
      "post": {
        "operationId": "ApprovestheassetwiththespecifiedID/keyvalue",
        "description": "Operation for approving an asset. The operation can only be invoked in the Main workspace and a 400 response will be returned if the operation is invoked in another workspace. A 400 response is also returned if the asset could not be approved, for instance due to a constraint (e.g. parent classfications not present in Approved) or due to the approval being rejected by a business condition. The asset to approve can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the asset. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the asset to update",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Asset successfully approved. Notice that the asset may only have been partially approved. In this case the response will hold information about the part objects that could not be synchronized to the Approved workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Asset successfully approved. Notice that the asset may only have been partially approved. In this case the response will hold information about the part objects that could not be synchronized to the Approved workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "messages": {
                  "title": "messages",
                  "description": "Messages related to part objects that could not be synchronized to the Approved workspace",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the operation is invoked in a workspace different from Main, if the approval could not be performed or if invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the operation is invoked in a workspace different from Main, if the approval could not be performed or if invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified asset cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified asset cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/assets/search": {
      "post": {
        "operationId": "Searchfor/queryassets",
        "description": "Operation for querying assets. Resource operation will return a maximum of 1000 results. Notice that while the query can be made arbitrarily complex with multiple levels of nested AND and OR conditions, such complex queries will not perform well.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "A query specification. Nested condition can be a compound condition. See \"Condition\" for more information.",
              "example": {
                "condition": {
                  "conditionType": "and",
                  "conditions": [
                    {
                      "conditionType": "simplebelow",
                      "topNodeId": "I-Level2-13",
                      "topNodeType": "classification"
                    },
                    {
                      "conditionType": "objecttype",
                      "objectType": "ProductImage"
                    }
                  ]
                }
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "condition"
              ],
              "properties": {
                "condition": {
                  "title": "condition",
                  "description": "An \"abstract\" representation of a condition. Must always either be an AndCondition, an OrCondition, an IdCondition, a NameCondition, a TextValueCondition, a NumericValueCondition, an ObjectTypeCondition, a SimpleBelowCondition, an LovValueCondition, a HasReferenceToCondition or a HasDataContainerObjectCondition.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "conditionType": {
                      "title": "conditionType",
                      "enum": [
                        "and",
                        "or",
                        "id",
                        "name",
                        "textvalue",
                        "numericvalue",
                        "objecttype",
                        "simplebelow",
                        "lovvalue",
                        "hasreferenceto",
                        "hasdatacontainerobject"
                      ],
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of query results as a stream",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Array of query results as a stream",
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryResult"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/attributes/{id}": {
      "get": {
        "operationId": "ReturnstheattributewiththespecifiedID",
        "description": "Operation for retrieving information about a specific attribute object",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the attribute for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The attribute with the specified ID",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The attribute with the specified ID",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "listOfValues": {
                  "title": "listOfValues",
                  "description": "ID of a list of values if the attribute is list of values based. Otherwise \"null\".",
                  "type": "string"
                },
                "units": {
                  "title": "units",
                  "description": "An array of IDs for the valid units",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "name": {
                  "title": "name",
                  "description": "Attribute name",
                  "type": "string"
                },
                "specification": {
                  "title": "specification",
                  "description": "Boolean indicating whether the attribute is a \"specification\" attribute as opposed to a \"description\" attribute",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Attribute metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "dataTypeGroups": {
                  "title": "dataTypeGroups",
                  "description": "An array of IDs of the data type groups (a.k.a. \"attribute groups\") that the attribute is linked into",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "calculated": {
                  "title": "calculated",
                  "description": "Boolean indicating whether the attribute is calculated",
                  "type": "boolean"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the attribute object",
                  "type": "string"
                },
                "multivalued": {
                  "title": "multivalued",
                  "description": "Boolean indicating whether multiple values can be set for the attribute",
                  "type": "boolean"
                },
                "defaultUnit": {
                  "title": "defaultUnit",
                  "description": "ID of the default unit, if any. Otherwise \"null\".",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/background-processes/{id}": {
      "get": {
        "operationId": "ReturnsthebackgroundprocesswiththespecifiedID",
        "description": "Operation for retrieving information about a specific background process instance",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the background process for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The background process with the specified ID",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The background process with the specified ID",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "user": {
                  "title": "user",
                  "description": "ID of the user who started the process",
                  "type": "string"
                },
                "ended": {
                  "title": "ended",
                  "description": "Time that the process ended in yyyy-mm-ddThh:mm:ss&#177hh:mm format. 'null' if the process is still active.",
                  "type": "string"
                },
                "started": {
                  "title": "started",
                  "description": "Time that the process was started in yyyy-mm-ddThh:mm:ss&#177hh:mm format. 'null' if the process has not yet started.",
                  "type": "string"
                },
                "created": {
                  "title": "created",
                  "description": "Time that the process was created in yyyy-mm-ddThh:mm:ss&#177hh:mm format",
                  "type": "string"
                },
                "numberOfErrors": {
                  "title": "numberOfErrors",
                  "description": "Number of errors during process execution",
                  "type": "integer",
                  "format": "int32"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the background process instance",
                  "type": "string"
                },
                "numberOfWarnings": {
                  "title": "numberOfWarnings",
                  "description": "Number of warnings during process execution",
                  "type": "integer",
                  "format": "int32"
                },
                "progress": {
                  "title": "progress",
                  "description": "Progress in percent",
                  "type": "integer",
                  "format": "int32"
                },
                "description": {
                  "title": "description",
                  "description": "Background process description",
                  "type": "string"
                },
                "status": {
                  "title": "status",
                  "description": "Background process status",
                  "enum": [
                    "waiting",
                    "running",
                    "succeeded",
                    "completedwitherrors",
                    "failed",
                    "suspended",
                    "aborted",
                    "unexpected"
                  ],
                  "type": "string"
                },
                "backgroundProcessType": {
                  "title": "backgroundProcessType",
                  "description": "The background process type",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified background process cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified background process cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/background-processes/{id}/attachments": {
      "get": {
        "operationId": "Returnsinformationaboutavailablebackgroundprocessattachments",
        "description": "Operation for retrieving information about available attachments for a specific background process instance",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the background process for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The background process attachments metadata",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The background process attachments metadata",
              "type": "array",
              "items": {
                "$ref": "#/definitions/BackgroundProcessAttachmentMetadata"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified background process cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified background process cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/background-processes/{id}/attachments/{attachmentId}": {
      "get": {
        "operationId": "Returnsattachmentmetadataforaspecificattachment",
        "description": "Operation for retrieving an attachment metadata object for a specific attachment. Should only be called for succeeded background processes.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the background process for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attachmentId",
            "description": "ID of the attachment",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The attachment metadata",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The attachment metadata",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "originalAttachmentId": {
                  "title": "originalAttachmentId",
                  "description": "Original ID of the background process attachment. Please remember that this ID does not have to be unique - same ID can be used by multiple attachments if the attachment holds multiple files",
                  "type": "string"
                },
                "mimeType": {
                  "title": "mimeType",
                  "description": "Mime type of the background process attachment",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Name of the background process attachment",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the background process attachment",
                  "type": "string"
                },
                "description": {
                  "title": "description",
                  "description": "Description of the background process attachment",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified background process or attachment cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified background process or attachment cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/background-processes/{id}/attachments/{attachmentId}/content": {
      "get": {
        "operationId": "Returnsthebackgroundprocessattachmentcontent",
        "description": "Operation for downloading attachment content for a specific background process attachment",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the background process for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attachmentId",
            "description": "ID of the attachment",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Binary data for the background process attachment with the specified ID",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "Binary data for the background process attachment with the specified ID",
              "type": "file"
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified background process or attachment cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified background process or attachment cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/background-processes/{id}/execution-report": {
      "get": {
        "operationId": "Returnsastreamedarrayofexecutionreportentries(ExecutionReportEntry)",
        "description": "Operation for retrieving the execution report for a specific background process as a streamed array of execution report entries (ExecutionReportEntry)",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the background process for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Stream of execution report entries (ExecutionReportEntry) for the background process with the specified ID",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Stream of execution report entries (ExecutionReportEntry) for the background process with the specified ID",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExecutionReportEntry"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified background process cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified background process cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/background-process-types": {
      "get": {
        "operationId": "Returnstheavailablebackgroundprocesstypes",
        "description": "Operation for retrieving an array of simple background process type representations for all background process types",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of background process type representations",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Array of background process type representations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/BackgroundProcessType"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/background-process-types/{typeId}/processes": {
      "get": {
        "operationId": "ReturnsbackgroundprocessIDsforthespecifiedbackgroundprocesstype",
        "description": "Operation for retrieving background process IDs for a specific background process type. Can be filtered on process status.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "status",
            "description": "Background process status filter",
            "required": false,
            "in": "query",
            "enum": [
              "waiting",
              "running",
              "succeeded",
              "completedwitherrors",
              "failed",
              "suspended",
              "aborted"
            ],
            "type": "string"
          },
          {
            "name": "typeId",
            "description": "Background process type ID",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of background process IDs as a stream",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "Array of background process IDs as a stream",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace or status information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace or status information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified background process type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified background process type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/classifications": {
      "post": {
        "operationId": "CreatesanewclassificationobjectwithautogeneratedID",
        "description": "Operation for creating a new classification object with autogenerated ID. Object type and a parent classification must be specified in the request body. Further, an auto ID pattern must be configured for the object type. An \"id\" must not be supplied in the request body.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "A classification object",
              "example": {
                "value": {
                  "name": "LCD TVs",
                  "objectType": "WebLevel2",
                  "parent": "I-WebLevel1-2",
                  "values": {
                    "Description": {
                      "value": {
                        "value": "Best TVs on the market"
                      }
                    }
                  },
                  "attributeLinks": [
                    {
                      "attribute": "RechargingTime"
                    },
                    {
                      "attribute": "3D"
                    }
                  ]
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "parent": {
                  "title": "parent",
                  "description": "Parent classification ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Classification name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the classification. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Classification values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the classification object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the classification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Classification created successfully",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Classification created successfully",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "parent": {
                  "title": "parent",
                  "description": "Parent classification ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Classification name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the classification. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Classification values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the classification object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the classification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, an auto ID pattern is not configured for the specified object type, if the specified object type is not valid below the specified parent, if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, an auto ID pattern is not configured for the specified object type, if the specified object type is not valid below the specified parent, if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/classifications/{id}": {
      "put": {
        "operationId": "CreatesorreplacesclassificationwithknownID",
        "description": "Operation for replacing an existing classification or creating a new classification with known ID. To avoid accidental replacement of existing classifications, replacement will only be performed if the value \"true\" is supplied for the \"allow-overwrite\" query parameter. A 400 response is returned if the value for \"allow-overwrite\" is \"false\" and a classification with the specified ID already exists. When replacing, any data that is local to the working context (or not dimension dependent) and for which the client has write permissions will be overwritten and replaced with the data provided in the request body. Object type and parent must always be specified in the request body. For the replace case, the classification can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its value for the specified key. A STEP ID is required for creating a new classification via this resource operation and a 400 response will therefore be returned if a \"keyId\" is supplied and the object does not exist in advance. If an ID is supplied in the request body, it must match the ID of the classification identified via the URL.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "allow-overwrite",
            "description": "Specifies whether the classification may be overwritten / replaced if it already exists. Defaults to \"false\".",
            "required": false,
            "in": "query",
            "default": false,
            "type": "boolean"
          },
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification to replace. If supplied, a key value should be supplied for the \"id\" path parameter. Cannot be used in combination with \"allow-overwrite=true\".",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "A classification object",
              "example": {
                "value": {
                  "name": "Appliances",
                  "objectType": "WebsiteCategoryLvl2",
                  "parent": "WC-1124",
                  "values": {
                    "SearchTerms": {
                      "values": [
                        {
                          "value": "appliance"
                        },
                        {
                          "value": "kitchen"
                        }
                      ]
                    }
                  }
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "parent": {
                  "title": "parent",
                  "description": "Parent classification ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Classification name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the classification. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Classification values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the classification object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the classification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Classification object successfully replaced",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Classification object successfully replaced",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "parent": {
                  "title": "parent",
                  "description": "Parent classification ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Classification name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the classification. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Classification values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the classification object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the classification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, a classification with the specified ID already exists and the value for the query parameter \"allow-overwrite\" is \"false\", if a \"keyId\" is supplied and \"allow-overwrite\" is \"true\", if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, a classification with the specified ID already exists and the value for the query parameter \"allow-overwrite\" is \"false\", if a \"keyId\" is supplied and \"allow-overwrite\" is \"true\", if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "get": {
        "operationId": "ReturnstheclassificationwiththespecifiedID/keyvalue",
        "description": "Operation for retrieving information about a specific classification object. The classification can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The classification with the specified ID / key value",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The classification with the specified ID / key value",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "parent": {
                  "title": "parent",
                  "description": "Parent classification ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Classification name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the classification. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Classification values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the classification object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the classification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "operationId": "DeletestheclassificationwiththespecifiedID/keyvalue",
        "description": "Operation for deleting a specific classification. Operation can only be invoked in editable workspaces and will if successful move the classification to the recycle bin. The classification can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Classification successfully deleted (moved to recycle bin)"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the classification cannot be deleted due to constraints like the classification having children or the existence of references pointing to the classification, if invalid context or workspace information is supplied or if the operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the classification cannot be deleted due to constraints like the classification having children or the existence of references pointing to the classification, if invalid context or workspace information is supplied or if the operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "patch": {
        "operationId": "Partiallyupdatesaclassification",
        "description": "Operation for updating multiple properties with a single request. The classification to update can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its value for the specified key. Contrary to the PUT /classifications/{id} replace operation, this operation will only modify data present in the supplied request body.<br/>For both single and multivalued attributes, if a value representation is present in the request body, the existing value will be overwritten. Notice however that supplying the property \"contextLocal\" with the value \"false\" or the SingleValue \"calculated\" property with the value \"true\" will cause a value update to be ignored.<br/>For single valued reference types (incl. classification product link types owned by the classification side), existing references will be replaced with those provided in the request body. For multivalued reference types, if references in the request body match existing references, these will be replaced. Otherwise references in the request body will be added (i.e. existing references not in the request body will not be removed). As with values, if the property \"contextLocal\" is supplied with the value \"false\" for a reference, the update will be ignored.<br/>If \"parent\" information is supplied, the classification will be moved below the specified parent given that it differs from the current.<br/>As with references, supplied attribute links will either be added or will replace existing links.<br/>This resource operation does not allow for the classification object type to be updated. If an ID is supplied in the request body, it must match the ID of the classification identified via the URL.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification to update. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "A classification object",
              "example": {
                "value": {
                  "name": "Appliances",
                  "parent": "WC-1124",
                  "values": {
                    "SearchTerms": {
                      "values": [
                        {
                          "value": "appliance"
                        },
                        {
                          "value": "kitchen"
                        }
                      ]
                    }
                  }
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "parent": {
                  "title": "parent",
                  "description": "Parent classification ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Classification name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the classification. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Classification values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the classification object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the classification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Classification object successfully updated",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Classification object successfully updated",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "parent": {
                  "title": "parent",
                  "description": "Parent classification ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Classification name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the classification. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Classification values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the classification object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the classification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/classifications/{id}/incoming-references/{referenceTypeId}": {
      "get": {
        "operationId": "Returnsstreamofincomingreferencesofthespecifiedtype_1",
        "description": "Returns an array of incoming references (IncomingReferenceEntry) of the specified type as a stream. Notice that this resource covers both \"cross references\" and  \"classification product links\" owned by the classification side. The classification can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve incoming references",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of incoming references of the specified type as a stream",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "An array of incoming references of the specified type as a stream",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IncomingReferenceEntry"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification or reference type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification or reference type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/classifications/{id}/values/{attributeId}": {
      "get": {
        "operationId": "Returnsthevalueforaclassificationattribute",
        "description": "Returns the value for the specified attribute. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued. The classification can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to retrieve the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "operationId": "Replacesthevalueforaclassificationattribute",
        "description": "Operation for replacing a classification attribute value. Request body must be either a SingleValue or a MultiValue depending on whether the attribute is multivalued. Notice that supplying the property \"contextLocal\" with the value \"false\" or the SingleValue \"calculated\" property with the value \"true\" will cause the value update to be ignored. The classification can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to retrieve the value",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "text/plain",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "operationId": "Deletesthevalueforaclassificationattribute",
        "description": "Operation for deleting a classification attribute value. Notice that it is only possible to delete non-calculated, locally defined values. The classification can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to retrieve the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/classifications/{id}/assets": {
      "get": {
        "operationId": "ReturnsastreamedarrayofIDsforassetslinkedtotheclassification",
        "description": "Returns a streamed array of IDs for assets directly below the specified classification. The classification can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A streamed array of IDs for assets linked into the specified classification",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "A streamed array of IDs for assets linked into the specified classification",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/classifications/{id}/children": {
      "get": {
        "operationId": "ReturnsastreamedarrayofIDsforclassificationchildren",
        "description": "Returns a streamed array of IDs for classifications directly below the specified classification. The classification can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A streamed array of IDs for classifications directly below the specified classification",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "A streamed array of IDs for classifications directly below the specified classification",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/classifications/{id}/approval-status": {
      "get": {
        "operationId": "ReturnstheapprovalstatusoftheclassificationwiththespecifiedID/keyvalue",
        "description": "Operation for retrieving the approval status of a classification. The classification can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Classification approval status",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Classification approval status",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "approvalStatus": {
                  "title": "approvalStatus",
                  "description": "The status",
                  "enum": [
                    "NotInApproved",
                    "PartlyApproved",
                    "ContextApproved",
                    "CompletelyApproved"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/classifications/{id}/approve": {
      "post": {
        "operationId": "ApprovestheclassificationwiththespecifiedID/keyvalue",
        "description": "Operation for approving a classification. The operation can only be invoked in the Main workspace and a 400 response will be returned if the operation is invoked in another workspace. A 400 response is also returned if the classification could not be approved, for instance due to a constraint (e.g. parent not present in Approved) or due to the approval being rejected by a business condition. The classification to approve can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Classification successfully approved. Notice that the classification may only have been partially approved. In this case the response will hold information about the part objects that could not be synchronized to the Approved workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Classification successfully approved. Notice that the classification may only have been partially approved. In this case the response will hold information about the part objects that could not be synchronized to the Approved workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "messages": {
                  "title": "messages",
                  "description": "Messages related to part objects that could not be synchronized to the Approved workspace",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the operation is invoked in a workspace different from Main, if the approval could not be performed or if invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the operation is invoked in a workspace different from Main, if the approval could not be performed or if invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/classifications/{id}/references": {
      "parameters": [
        {
          "name": "id",
          "description": "ID / key value of the classification to create or replace",
          "required": true,
          "in": "path",
          "type": "string"
        }
      ]
    },
    "/classifications/{id}/references/{referenceTypeId}": {
      "get": {
        "operationId": "Returnsreference(s)ofthespecifiedtype_1",
        "description": "Returns local reference(s) of the specified type owned by the classification. Response will either be an instance of SingleReference or MultiReference depending on whether the reference type is multivalued. Notice that this resource covers both \"cross references\" and  \"classification product links\" owned by the classification side and that the latter when seen from the classification side always will be multivalued. The classification can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Either a MultiReference or SingleReference depending on whether the specified reference type is multivalued (\"classification product links\" will when seen from the classification side always be multivalued)",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "Either a MultiReference or SingleReference depending on whether the specified reference type is multivalued (\"classification product links\" will when seen from the classification side always be multivalued)"
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification or reference type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification or reference type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/classifications/{id}/references/{referenceTypeId}/{targetId}": {
      "put": {
        "operationId": "Replacesareference_1",
        "description": "Replaces the specified reference. If a locally defined reference to the same target already exists or if the reference type is single-valued and a locally defined reference from the source already exists, the \"allow-overwrite\" query parameter must be set to \"true\" in order for the existing reference to be replaced. The classification that owns / will own the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key. Notice that if \"target\" or \"targetType\" is supplied in the request body, the values must match the reference type and the STEP ID of the target specified in the URL. If the property \"contextLocal\" is supplied with the value \"false\", the update will be ignored. This resource covers both \"cross references\" and \"classification product links\" owned by the classification side.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification that owns / will own the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "allow-overwrite",
            "description": "Specifies whether existing references may be overwritten. This includes references of the same type to the same target and for single-valued reference types, references of the same type to any target. Defaults to \"false\".",
            "required": false,
            "in": "query",
            "default": false,
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "An atomic reference. Can represent both a \"cross reference\" and a \"classification product link\".",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contextLocal": {
                  "title": "contextLocal",
                  "description": "Indicates whether the reference is set locally or inherited from a dimension point / a combination dimension points different from the ones used for current context. Should not be supplied for reference updates. If supplied with the value \"false\", the update will be skipped.",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "target": {
                  "title": "target",
                  "description": "ID of the target object",
                  "type": "string"
                },
                "targetType": {
                  "title": "targetType",
                  "description": "Target \"supertype\"",
                  "enum": [
                    "product",
                    "classification",
                    "asset",
                    "entity"
                  ],
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The updated reference (ReferenceEntry). Returned when a local reference to the target existed in advance.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The updated reference (ReferenceEntry). Returned when a local reference to the target existed in advance.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contextLocal": {
                  "title": "contextLocal",
                  "description": "Indicates whether the reference is set locally or inherited from a dimension point / a combination dimension points different from the ones used for current context. Should not be supplied for reference updates. If supplied with the value \"false\", the update will be skipped.",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "target": {
                  "title": "target",
                  "description": "ID of the target object",
                  "type": "string"
                },
                "targetType": {
                  "title": "targetType",
                  "description": "Target \"supertype\"",
                  "enum": [
                    "product",
                    "classification",
                    "asset",
                    "entity"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, a/the reference exists and value for the query parameter \"allow-overwrite\" is \"false\", if the reference cannot be successfully created / updated based on information provided in the request body, if invalid context or workspace information is supplied, if operation is invoked in a terminated workspace or if \"target\" or \"targetType\" is supplied and the values do not match the target ID and reference type specified in the URL.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, a/the reference exists and value for the query parameter \"allow-overwrite\" is \"false\", if the reference cannot be successfully created / updated based on information provided in the request body, if invalid context or workspace information is supplied, if operation is invoked in a terminated workspace or if \"target\" or \"targetType\" is supplied and the values do not match the target ID and reference type specified in the URL.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification, reference type or target cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification, reference type or target cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "get": {
        "operationId": "Returnsaspecificreference_1",
        "description": "Returns the local reference (ReferenceEntry) of specified type from specified classification to specified target. Notice that this resource covers both \"cross references\" and \"classification product links\" owned by the classification side. The classification that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A reference (ReferenceEntry) of specified type from specified classification to specified target",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "A reference (ReferenceEntry) of specified type from specified classification to specified target",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contextLocal": {
                  "title": "contextLocal",
                  "description": "Indicates whether the reference is set locally or inherited from a dimension point / a combination dimension points different from the ones used for current context. Should not be supplied for reference updates. If supplied with the value \"false\", the update will be skipped.",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "target": {
                  "title": "target",
                  "description": "ID of the target object",
                  "type": "string"
                },
                "targetType": {
                  "title": "targetType",
                  "description": "Target \"supertype\"",
                  "enum": [
                    "product",
                    "classification",
                    "asset",
                    "entity"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification, reference type, target or reference cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification, reference type, target or reference cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "operationId": "Deletesthereference_1",
        "description": "Deletes the specified reference. Notice that it is only possible to delete references that are defined locally (\"contextLocal\": true). Further notice that this resource covers both \"cross references\" and \"classification product links\" owned by the classification side. The classification that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Reference successfully deleted"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the reference cannot be deleted due to a constraint, if an attempt is made to delete a reference that is not defined locally or if invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the reference cannot be deleted due to a constraint, if an attempt is made to delete a reference that is not defined locally or if invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification, reference type, target or reference cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification, reference type, target or reference cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/classifications/{id}/references/{referenceTypeId}/{targetId}/values/{attributeId}": {
      "put": {
        "operationId": "Replacesthevalueforareferencemetadataattribute_1",
        "description": "Operation for replacing the value of an attribute on a local reference. It is only possible to replace values on references that are defined locally (\"contextLocal\": true). Request body must be either a SingleValue or a MultiValue depending on whether the attribute is multivalued. Notice that supplying the property \"contextLocal\" with the value \"false\" or the SingleValue \"calculated\" property with the value \"true\" will cause the value update to be ignored. Further notice that this resource covers values on both \"cross references\" and \"classification product links\" owned by the classification side. The classification that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to replace the value",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "text/plain",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied, if an attempt is made to update a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied, if an attempt is made to update a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification, reference type, target, reference or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification, reference type, target, reference or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "operationId": "Deletesthevalueforareferencemetadataattribute_1",
        "description": "Operation for deleting the value of an attribute on a local reference. Notice that it is only possible to delete non-calculated values on references that are defined locally (\"contextLocal\": true). Further notice that this resource covers values on both \"cross references\" and \"classification product links\" owned by the classification side. The classification that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to replace the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied, if an attempt is made to delete a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied, if an attempt is made to delete a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification, reference type, target, reference or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification, reference type, target, reference or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "get": {
        "operationId": "Returnsthevalueforareferencemetadataattribute_1",
        "description": "Returns the value for the specified attribute for the specified local reference. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued. Notice that this resource covers both \"cross references\" and \"classification product links\" owned by the classification side. The classification that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the classification that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the classification to create or replace",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to replace the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified classification, reference type, target, reference or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified classification, reference type, target, reference or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/classifications/search": {
      "post": {
        "operationId": "Searchfor/queryclassifications",
        "description": "Operation for querying classifications. Resource operation will return a maximum of 1000 results. Notice that while the query can be made arbitrarily complex with multiple levels of nested AND and OR conditions, such complex queries will not perform well.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "A query specification. Nested condition can be a compound condition. See \"Condition\" for more information.",
              "example": {
                "condition": {
                  "conditionType": "and",
                  "conditions": [
                    {
                      "conditionType": "simplebelow",
                      "topNodeId": "I-Level2-13",
                      "topNodeType": "classification"
                    },
                    {
                      "conditionType": "objecttype",
                      "objectType": "WebCategory"
                    }
                  ]
                }
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "condition"
              ],
              "properties": {
                "condition": {
                  "title": "condition",
                  "description": "An \"abstract\" representation of a condition. Must always either be an AndCondition, an OrCondition, an IdCondition, a NameCondition, a TextValueCondition, a NumericValueCondition, an ObjectTypeCondition, a SimpleBelowCondition, an LovValueCondition, a HasReferenceToCondition or a HasDataContainerObjectCondition.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "conditionType": {
                      "title": "conditionType",
                      "enum": [
                        "and",
                        "or",
                        "id",
                        "name",
                        "textvalue",
                        "numericvalue",
                        "objecttype",
                        "simplebelow",
                        "lovvalue",
                        "hasreferenceto",
                        "hasdatacontainerobject"
                      ],
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of query results as a stream",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Array of query results as a stream",
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryResult"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/data-container-types/{id}": {
      "get": {
        "operationId": "ReturnsthedatacontainertypewiththespecifiedID",
        "description": "Operation for retrieving information about a specific data container type object",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the data container type",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The data container type with the specified ID",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The data container type with the specified ID",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "name": {
                  "title": "name",
                  "description": "Data container type name",
                  "type": "string"
                },
                "values": {
                  "title": "values",
                  "description": "Data container type metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "id": {
                  "title": "id",
                  "description": "ID of the data container type object",
                  "type": "string"
                },
                "multivalued": {
                  "title": "multivalued",
                  "description": "Boolean indication of whether the data container type allows for multiple data container entries / objects",
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified data container type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified data container type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/data-type-groups/{id}": {
      "get": {
        "operationId": "ReturnsthedatatypegroupwiththespecifiedID",
        "description": "Operation for retrieving information about a specific data type group (a.k.a. \"attribute group\") object",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the data type group for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The data type group (a.k.a. \"attribute group\") with the specified ID",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The data type group (a.k.a. \"attribute group\") with the specified ID",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "parent": {
                  "title": "parent",
                  "description": "ID of parent data type group",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Data type group name",
                  "type": "string"
                },
                "values": {
                  "title": "values",
                  "description": "Data type group metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "id": {
                  "title": "id",
                  "description": "ID of the data type group object",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified data type group cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified data type group cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/entities": {
      "post": {
        "operationId": "CreatesanewentityobjectwithautogeneratedID",
        "description": "Operation for creating a new entity object with autogenerated ID. Object type and a parent entity must be specified in the request body. Further, an auto ID pattern must be configured for the object type. An \"id\" must not be supplied in the request body.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "An entity object",
              "example": {
                "value": {
                  "name": "Macy, Charles",
                  "objectType": "Contact",
                  "parent": "ContactsRoot",
                  "values": {
                    "GivenNames": {
                      "value": {
                        "value": "Charles"
                      }
                    },
                    "Surname": {
                      "value": {
                        "value": "Macy"
                      }
                    }
                  },
                  "dataContainers": {
                    "ContactInfo": {
                      "dataContainers": [
                        {
                          "values": {
                            "Type": {
                              "value": {
                                "valueId": "MAIL"
                              }
                            },
                            "Value": {
                              "value": {
                                "value": "charles.macy@wtorg.com"
                              }
                            }
                          }
                        },
                        {
                          "values": {
                            "Type": {
                              "value": {
                                "valueId": "MAIL"
                              }
                            },
                            "Value": {
                              "value": {
                                "value": "charlesmacy@gmail.com"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Entity data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent entity ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Entity name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References from the entity. Keys are reference type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Entity values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the entity object",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Entity created successfully",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Entity created successfully",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Entity data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent entity ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Entity name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References from the entity. Keys are reference type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Entity values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the entity object",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, an auto ID pattern is not configured for the specified object type, if the specified object type is not valid below the specified parent, if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, an auto ID pattern is not configured for the specified object type, if the specified object type is not valid below the specified parent, if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/entities/{id}": {
      "delete": {
        "operationId": "DeletestheentitywiththespecifiedID",
        "description": "Operation for deleting a specific entity. Operation can only be invoked in editable workspaces and will if successful move the entity to the recycle bin or remove it completely depending on whether the entity object type is workspace revised. The entity can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Entity successfully deleted (moved to recycle bin or removed)"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the entity cannot be deleted due to constraints like e.g. the entity having children or the existence of references pointing to the entity, if invalid context or workspace information is supplied or if the operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the entity cannot be deleted due to constraints like e.g. the entity having children or the existence of references pointing to the entity, if invalid context or workspace information is supplied or if the operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "patch": {
        "operationId": "Partiallyupdatesanentity",
        "description": "Operation for updating multiple properties with a single request. The entity to update can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its value for the specified key. Contrary to the PUT /entities/{id} replace operation, this operation will only modify data present in the supplied request body.<br/>For both single and multivalued attributes, if a value representation is present in the request body, the existing value will be overwritten. Notice however that supplying the property \"contextLocal\" with the value \"false\" or the SingleValue \"calculated\" property with the value \"true\" will cause a value update to be ignored.<br/>For single valued reference types, existing references will be replaced with those provided in the request body. For multivalued reference types, if references in the request body match existing references, these will be replaced. Otherwise references in the request body will be added (i.e. existing references not in the request body will not be removed). As with values, if the property \"contextLocal\" is supplied with the value \"false\" for a reference, the update will be ignored.<br/>If \"parent\" information is supplied, the entity will be moved below the specified parent given that it differs from the current.<br/>Data containers can only be updated if auto IDs are configured for the data container type. For single valued data container types, existing data container objects will be replaced with the data container object in the request body. For multi valued data container types, data container objects in the request body will be added.<br/>This resource operation does not allow for the entity object type to be updated. If an ID is supplied in the request body, it must match the ID of the entity identified via the URL.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity to update. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "An entity object",
              "example": {
                "value": {
                  "values": {
                    "FirstName": {
                      "value": {
                        "value": "John"
                      }
                    },
                    "LastName": {
                      "value": {
                        "value": "Smith"
                      }
                    }
                  }
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Entity data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent entity ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Entity name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References from the entity. Keys are reference type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Entity values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the entity object",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity object successfully updated",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Entity object successfully updated",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Entity data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent entity ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Entity name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References from the entity. Keys are reference type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Entity values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the entity object",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "get": {
        "operationId": "ReturnstheentitywiththespecifiedID/keyvalue",
        "description": "Operation for retrieving information about a specific entity object. The entity can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The entity with the specified ID / key value",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The entity with the specified ID / key value",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Entity data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent entity ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Entity name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References from the entity. Keys are reference type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Entity values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the entity object",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "operationId": "CreatesorreplacesentitywithknownID",
        "description": "Operation for replacing an existing entity or creating a new entity with known ID. To avoid accidental replacement of existing entities, replacement will only be performed if the value \"true\" is supplied for the \"allow-overwrite\" query parameter. A 400 response is returned if the value for \"allow-overwrite\" is \"false\" and an entity with the specified ID already exists. When replacing, any data that is local to the working context (or not dimension dependent) and for which the client has write permissions will be overwritten and replaced with the data provided in the request body. Object type and parent must always be specified in the request body. For the replace case, the entity can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its value for the specified key. A STEP ID is required for creating a new entity via this resource operation and a 400 response will therefore be returned if a \"keyId\" is supplied and the object does not exist in advance. If an ID is supplied in the request body, it must match the ID of the entity identified via the URL.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "allow-overwrite",
            "description": "Specifies whether the entity may be overwritten / replaced if it already exists. Defaults to \"false\".",
            "required": false,
            "in": "query",
            "default": false,
            "type": "boolean"
          },
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity to replace. If supplied, a key value should be supplied for the \"id\" path parameter. Cannot be used in combination with \"allow-overwrite=true\".",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "An entity object",
              "example": {
                "value": {
                  "objectType": "Customer",
                  "parent": "Customers",
                  "values": {
                    "FirstName": {
                      "value": {
                        "value": "John"
                      }
                    },
                    "LastName": {
                      "value": {
                        "value": "Smith"
                      }
                    }
                  }
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Entity data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent entity ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Entity name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References from the entity. Keys are reference type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Entity values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the entity object",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Entity object successfully replaced",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Entity object successfully replaced",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Entity data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent entity ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Entity name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References from the entity. Keys are reference type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Entity values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the entity object",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, an entity with the specified ID already exists and the value for the query parameter \"allow-overwrite\" is \"false\", if a \"keyId\" is supplied and \"allow-overwrite\" is \"true\", if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, an entity with the specified ID already exists and the value for the query parameter \"allow-overwrite\" is \"false\", if a \"keyId\" is supplied and \"allow-overwrite\" is \"true\", if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/entities/{id}/references/{referenceTypeId}": {
      "get": {
        "operationId": "Returnsreference(s)ofthespecifiedtype_2",
        "description": "Returns local reference(s) of the specified type owned by the entity. Response will either be a SingleReference or a MultiReference depending on whether the reference type is multivalued. The entity can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Either a MultiReference or SingleReference depending on whether the specified reference type is multivalued",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "Either a MultiReference or SingleReference depending on whether the specified reference type is multivalued"
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity or reference type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity or reference type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/entities/{id}/references/{referenceTypeId}/{targetId}": {
      "put": {
        "operationId": "Replacesareference_2",
        "description": "Replaces the specified reference. If a locally defined reference to the same target already exists or if the reference type is single-valued and a locally defined reference from the source already exists, the \"allow-overwrite\" query parameter must be set to \"true\" in order for the existing reference to be replaced. The entity that owns / will own the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key. Notice that if \"target\" or \"targetType\" is supplied in the request body, the values must match the reference type and the STEP ID of the target specified in the URL. If the property \"contextLocal\" is supplied with the value \"false\", the update will be ignored.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity owns / will own the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "allow-overwrite",
            "description": "Specifies whether existing references may be overwritten. This includes references of the same type to the same target and for single-valued reference types, references of the same type to any target. Defaults to \"false\".",
            "required": false,
            "in": "query",
            "default": false,
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "An atomic reference. Can represent both a \"cross reference\" and a \"classification product link\".",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contextLocal": {
                  "title": "contextLocal",
                  "description": "Indicates whether the reference is set locally or inherited from a dimension point / a combination dimension points different from the ones used for current context. Should not be supplied for reference updates. If supplied with the value \"false\", the update will be skipped.",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "target": {
                  "title": "target",
                  "description": "ID of the target object",
                  "type": "string"
                },
                "targetType": {
                  "title": "targetType",
                  "description": "Target \"supertype\"",
                  "enum": [
                    "product",
                    "classification",
                    "asset",
                    "entity"
                  ],
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The updated reference (ReferenceEntry). Returned when a local reference to the target existed in advance.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The updated reference (ReferenceEntry). Returned when a local reference to the target existed in advance.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contextLocal": {
                  "title": "contextLocal",
                  "description": "Indicates whether the reference is set locally or inherited from a dimension point / a combination dimension points different from the ones used for current context. Should not be supplied for reference updates. If supplied with the value \"false\", the update will be skipped.",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "target": {
                  "title": "target",
                  "description": "ID of the target object",
                  "type": "string"
                },
                "targetType": {
                  "title": "targetType",
                  "description": "Target \"supertype\"",
                  "enum": [
                    "product",
                    "classification",
                    "asset",
                    "entity"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, a/the reference exists and value for the query parameter \"allow-overwrite\" is \"false\", if the reference cannot be successfully created / updated based on information provided in the request body, if invalid context or workspace information is supplied, if operation is invoked in a terminated workspace or if \"target\" or \"targetType\" is supplied and the values do not match the target ID and reference type specified in the URL.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, a/the reference exists and value for the query parameter \"allow-overwrite\" is \"false\", if the reference cannot be successfully created / updated based on information provided in the request body, if invalid context or workspace information is supplied, if operation is invoked in a terminated workspace or if \"target\" or \"targetType\" is supplied and the values do not match the target ID and reference type specified in the URL.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity, reference type or target cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity, reference type or target cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "operationId": "Deletesthereference_2",
        "description": "Deletes the specified reference. Notice that it is only possible to delete references that are defined locally (\"contextLocal\": true). The entity that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Reference successfully deleted"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the reference cannot be deleted due to a constraint, if an attempt is made to delete a reference that is not defined locally or if invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the reference cannot be deleted due to a constraint, if an attempt is made to delete a reference that is not defined locally or if invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity, reference type, target or reference cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity, reference type, target or reference cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "get": {
        "operationId": "Returnsaspecificreference_2",
        "description": "Returns the local reference (ReferenceEntry) of specified type from specified entity to specified target. The entity that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A reference (ReferenceEntry) of specified type from specified entity to specified target",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "A reference (ReferenceEntry) of specified type from specified entity to specified target",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contextLocal": {
                  "title": "contextLocal",
                  "description": "Indicates whether the reference is set locally or inherited from a dimension point / a combination dimension points different from the ones used for current context. Should not be supplied for reference updates. If supplied with the value \"false\", the update will be skipped.",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "target": {
                  "title": "target",
                  "description": "ID of the target object",
                  "type": "string"
                },
                "targetType": {
                  "title": "targetType",
                  "description": "Target \"supertype\"",
                  "enum": [
                    "product",
                    "classification",
                    "asset",
                    "entity"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity, reference type, target or reference cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity, reference type, target or reference cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/entities/{id}/references/{referenceTypeId}/{targetId}/values/{attributeId}": {
      "put": {
        "operationId": "Replacesthevalueforareferencemetadataattribute_2",
        "description": "Operation for replacing the value of an attribute on a local reference. It is only possible to replace values on references that are defined locally (\"contextLocal\": true). Request body must be either a SingleValue or a MultiValue depending on whether the attribute is multivalued. Notice that supplying the property \"contextLocal\" with the value \"false\" or the SingleValue \"calculated\" property with the value \"true\" will cause the value update to be ignored. The entity that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to replace the value",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "text/plain",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied, if an attempt is made to delete a reference that is not defined locally or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied, if an attempt is made to delete a reference that is not defined locally or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity, reference type, target, reference or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity, reference type, target, reference or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "get": {
        "operationId": "Returnsthevalueforareferencemetadataattribute_2",
        "description": "Returns the value for the specified attribute for the specified local reference. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued. The entity that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to replace the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity, reference type, target, reference or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity, reference type, target, reference or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "operationId": "Deletesthevalueforareferencemetadataattribute_2",
        "description": "Operation for deleting the value of an attribute on a reference. Notice that it is only possible to delete non-calculated values on references that are defined locally (\"contextLocal\": true). The entity that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to replace the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied, if an attempt is made to delete a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied, if an attempt is made to delete a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity, reference type, target, reference or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity, reference type, target, reference or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/entities/{id}/data-containers/{dataContainerTypeId}": {
      "get": {
        "operationId": "Returnsdatacontainer(s)ofthespecifiedtype_0",
        "description": "Returns data container(s) of the specified type. Response will either be a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued. The entity can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "dataContainerTypeId",
            "description": "ID of the data container type",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Either a MultiDataContainer or SingleDataContainer depending on whether the specified data container type is multivalued",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "Either a MultiDataContainer or SingleDataContainer depending on whether the specified data container type is multivalued"
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity or data container type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity or data container type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/entities/{id}/approve": {
      "post": {
        "operationId": "ApprovestheentitywiththespecifiedID/keyvalue",
        "description": "Operation for approving an entity. The operation can only be invoked in the Main workspace and a 400 response will be returned if the operation is invoked in another workspace. A 400 response is also returned if the entity could not be approved, for instance due to a constraint (e.g. parent not present in Approved), due to the approval being rejected by a business condition or due to the entity not being workspace revisable. The entity to approve can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Entity successfully approved. Notice that the entity may only have been partially approved. In this case the response will hold information about the part objects that could not be synchronized to the Approved workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Entity successfully approved. Notice that the entity may only have been partially approved. In this case the response will hold information about the part objects that could not be synchronized to the Approved workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "messages": {
                  "title": "messages",
                  "description": "Messages related to part objects that could not be synchronized to the Approved workspace",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the operation is invoked in a workspace different from Main, if the entity is not workspace revisable, if the approval for some other reason could not be performed or if invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the operation is invoked in a workspace different from Main, if the entity is not workspace revisable, if the approval for some other reason could not be performed or if invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/entities/{id}/incoming-references/{referenceTypeId}": {
      "get": {
        "operationId": "Returnsstreamofincomingreferencesofthespecifiedtype_2",
        "description": "Returns an array of incoming references (IncomingReferenceEntry) of the specified type as a stream. The entity can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve incoming references",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of incoming references of the specified type as a stream",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "An array of incoming references of the specified type as a stream",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IncomingReferenceEntry"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity or reference type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity or reference type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/entities/{id}/approval-status": {
      "get": {
        "operationId": "ReturnstheapprovalstatusoftheentitywiththespecifiedID/keyvalue",
        "description": "Operation for retrieving the approval status of an entity. The entity can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Notice that a 400 response is returned if the operation is invoked for a non-workspace revisable entity.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Entity approval status",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Entity approval status",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "approvalStatus": {
                  "title": "approvalStatus",
                  "description": "The status",
                  "enum": [
                    "NotInApproved",
                    "PartlyApproved",
                    "ContextApproved",
                    "CompletelyApproved"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if the operation is invoked for a non-workspace revisable entity.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if the operation is invoked for a non-workspace revisable entity.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/entities/{id}/children": {
      "get": {
        "operationId": "ReturnsastreamedarrayofIDsforentitychildren",
        "description": "Returns a streamed array of IDs for entities directly below the specified entity. The entity can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A streamed array of IDs for entities directly below the specified entity",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "A streamed array of IDs for entities directly below the specified entity",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/entities/{id}/values/{attributeId}": {
      "delete": {
        "operationId": "Deletesthevalueforanentityattribute",
        "description": "Operation for deleting an entity attribute value. Notice that it is only possible to delete non-calculated, locally defined values. The entity can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to delete the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "get": {
        "operationId": "Returnsthevalueforanentityattribute",
        "description": "Returns the value for the specified attribute. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued. The entity can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to delete the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "operationId": "Replacesthevalueforanentityattribute",
        "description": "Operation for replacing an entity attribute value. Request body must be either a SingleValue or a MultiValue depending on whether the attribute is multivalued. Notice that supplying the property \"contextLocal\" with the value \"false\" or the SingleValue \"calculated\" property with the value \"true\" will cause the value update to be ignored. The entity can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the entity. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the entity to delete",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to delete the value",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "text/plain",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified entity or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified entity or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/entities/search": {
      "post": {
        "operationId": "Searchfor/queryentities",
        "description": "Operation for querying entities. Resource operation will return a maximum of 1000 results. Notice that while the query can be made arbitrarily complex with multiple levels of nested AND and OR conditions, such complex queries will not perform well.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "A query specification. Nested condition can be a compound condition. See \"Condition\" for more information.",
              "example": {
                "condition": {
                  "conditionType": "and",
                  "conditions": [
                    {
                      "conditionType": "simplebelow",
                      "topNodeId": "I-Level2-13",
                      "topNodeType": "entity"
                    },
                    {
                      "conditionType": "objecttype",
                      "objectType": "Customer"
                    }
                  ]
                }
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "condition"
              ],
              "properties": {
                "condition": {
                  "title": "condition",
                  "description": "An \"abstract\" representation of a condition. Must always either be an AndCondition, an OrCondition, an IdCondition, a NameCondition, a TextValueCondition, a NumericValueCondition, an ObjectTypeCondition, a SimpleBelowCondition, an LovValueCondition, a HasReferenceToCondition or a HasDataContainerObjectCondition.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "conditionType": {
                      "title": "conditionType",
                      "enum": [
                        "and",
                        "or",
                        "id",
                        "name",
                        "textvalue",
                        "numericvalue",
                        "objecttype",
                        "simplebelow",
                        "lovvalue",
                        "hasreferenceto",
                        "hasdatacontainerobject"
                      ],
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of query results as a stream",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Array of query results as a stream",
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryResult"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/event-processors": {
      "get": {
        "operationId": "Returnsbasiceventprocessorrepresentations",
        "description": "Operation for retrieving an array of basic event processor representations for all accessible processors",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of basic event processor representations",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "An array of basic event processor representations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventProcessor"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/event-processors/{id}": {
      "parameters": [
        {
          "name": "id",
          "description": "ID of the event processor to disable",
          "required": true,
          "in": "path",
          "type": "string"
        }
      ]
    },
    "/event-processors/{id}/disable": {
      "post": {
        "operationId": "Disablesthespecifiedeventprocessor",
        "description": "Operation for disabling an event processor. Can be called regardless of the event processor status.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the event processor to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified event processor cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified event processor cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/event-processors/{id}/statistics": {
      "get": {
        "operationId": "Returnsstatisticsforthespecifiedeventprocessor",
        "description": "Operation for retrieving statistics for a specific event processor",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the event processor to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics for the event processor",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Statistics for the event processor",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "nextRun": {
                  "title": "nextRun",
                  "description": "Time for next run (invocation) in yyyy-mm-ddThh:mm:ss&#177hh:mm format. Will be null if no next run is scheduled.",
                  "type": "string"
                },
                "enabledOn": {
                  "title": "enabledOn",
                  "description": "Time that the event processor was enabled in yyyy-mm-ddThh:mm:ss&#177hh:mm format. Will be null for disabled event processors.",
                  "type": "string"
                },
                "lastRun": {
                  "title": "lastRun",
                  "description": "Time for last run (invocation) in yyyy-mm-ddThh:mm:ss&#177hh:mm format. Will be null if the event processor has never run.",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified event processor cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified event processor cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/event-processors/{id}/status": {
      "get": {
        "operationId": "Returnsthestatusofthespecifiedeventprocessor",
        "description": "Operation for retrieving status information for a specific event processor",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the event processor to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status for the event processor",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Status for the event processor",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "status": {
                  "title": "status",
                  "description": "Status for event processor",
                  "enum": [
                    "enabled",
                    "disabled",
                    "failed"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified event processor cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified event processor cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/event-processors/{id}/invoke": {
      "post": {
        "operationId": "Invokesthespecifiedeventprocessor",
        "description": "Operation for invoking an event processor. Can be called only for event processors with status 'enabled'.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the event processor to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if operation is invoked for an event processor that does not have the status 'enabled'.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if operation is invoked for an event processor that does not have the status 'enabled'.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified event processor cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified event processor cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/event-processors/{id}/enable": {
      "post": {
        "operationId": "Enablesthespecifiedeventprocessor",
        "description": "Operation for enabling an event processor. Can be called regardless of the event processor status. Event processors with status 'failed' will be resumed.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the event processor to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified event processor cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified event processor cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/event-processors/{id}/execution-report": {
      "get": {
        "operationId": "Returnstheexecutionreportforthespecifiedeventprocessor",
        "description": "Operation for retrieving the execution report for the main process of a specific event processor",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the event processor to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Execution report for the event processor with the specified ID as a stream of ExecutionReportEntries",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Execution report for the event processor with the specified ID as a stream of ExecutionReportEntries",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExecutionReportEntry"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified event processor cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified event processor cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/event-processors/{id}/queue": {
      "parameters": [
        {
          "name": "id",
          "description": "ID of the event processor to disable",
          "required": true,
          "in": "path",
          "type": "string"
        }
      ]
    },
    "/event-processors/{id}/queue/status": {
      "get": {
        "operationId": "Returnsthestatusoftheeventqueueassociatedwiththeeventprocessor",
        "description": "Operation for retrieving status information for the event queue associated with an event processor",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the event processor to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status for the event queue",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Status for the event queue",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "title": "enabled",
                  "description": "Is the queue enabled (listening) or not",
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified event processor cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified event processor cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/event-processors/{id}/queue/enable": {
      "post": {
        "operationId": "Enablestheeventqueueassociatedwiththeeventprocessor",
        "description": "Operation for enabling the event queue associated with an event processor",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the event processor to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified event processor cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified event processor cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/event-processors/{id}/queue/disable": {
      "post": {
        "operationId": "Disablestheeventqueueassociatedwiththeeventprocessor",
        "description": "Operation for disabling the event queue associated with an event processor",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the event processor to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified event processor cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified event processor cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/event-processors/{id}/queue/number-of-unread-events": {
      "get": {
        "operationId": "Returnsthenumberofunreadeventsfortheassociatedeventqueue_0",
        "description": "Operation for retrieving the number of unread events for event queue associated with a specific event processor. The count will be cached for up to 15 seconds server-side.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the event processor to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The number of unread events",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The number of unread events",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "amount": {
                  "title": "amount",
                  "description": "The amount",
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified event processor cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified event processor cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/inbound-integration-endpoints": {
      "get": {
        "operationId": "Returnsbasicinboundintegrationendpointrepresentations",
        "description": "Operation for retrieving an array of basic inbound integration endpoint representations for all accessible endpoints",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of basic inbound integration endpoint representations",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "An array of basic inbound integration endpoint representations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/InboundIntegrationEndpoint"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/inbound-integration-endpoints/{id}": {
      "parameters": [
        {
          "name": "id",
          "description": "ID of the inbound integration endpoint for which to retrieve the status",
          "required": true,
          "in": "path",
          "type": "string"
        }
      ]
    },
    "/inbound-integration-endpoints/{id}/status": {
      "get": {
        "operationId": "Returnsthestatusofthespecifiedinboundintegrationendpoint",
        "description": "Operation for retrieving status information for a specific inbound integration endpoint",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the inbound integration endpoint for which to retrieve the status",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status for the inbound integration endpoint",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Status for the inbound integration endpoint",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "status": {
                  "title": "status",
                  "description": "Status for endpoint",
                  "enum": [
                    "enabled",
                    "disabled",
                    "failed"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified inbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified inbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/inbound-integration-endpoints/{id}/worker-processes": {
      "get": {
        "operationId": "ReturnsbackgroundprocessIDsforprocessesstartedbytheendpoint_0",
        "description": "Operation for retrieving background process IDs for processes started by the endpoint. Can be filtered on process status.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "status",
            "description": "Background process status filter",
            "required": false,
            "in": "query",
            "enum": [
              "waiting",
              "running",
              "succeeded",
              "completedwitherrors",
              "failed",
              "suspended",
              "aborted"
            ],
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the inbound integration endpoint for which to retrieve the status",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of background process IDs as a stream",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "Array of background process IDs as a stream",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context, workspace or status information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context, workspace or status information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified inbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified inbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/inbound-integration-endpoints/{id}/invoke": {
      "post": {
        "operationId": "Invokesthespecifiedinboundintegrationendpoint",
        "description": "Operation for invoking an inbound integration endpoint. Can be called only for endpoints with status 'enabled'.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the inbound integration endpoint for which to retrieve the status",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if operation is invoked for an endpoint that does not have the status 'enabled'.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if operation is invoked for an endpoint that does not have the status 'enabled'.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified inbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified inbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/inbound-integration-endpoints/{id}/disable": {
      "post": {
        "operationId": "Disablesthespecifiedinboundintegrationendpoint",
        "description": "Operation for disabling an inbound integration endpoint. Can be called regardless of the endpoint status.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the inbound integration endpoint for which to retrieve the status",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified inbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified inbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/inbound-integration-endpoints/{id}/execution-report": {
      "get": {
        "operationId": "Returnstheexecutionreportforthespecifiedinboundintegrationendpoint",
        "description": "Operation for retrieving the execution report for the main process of a specific inbound integration endpoint",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the inbound integration endpoint for which to retrieve the status",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Execution report for the inbound integration endpoint with the specified ID as a stream of ExecutionReportEntries",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Execution report for the inbound integration endpoint with the specified ID as a stream of ExecutionReportEntries",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExecutionReportEntry"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified inbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified inbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/inbound-integration-endpoints/{id}/statistics": {
      "get": {
        "operationId": "Returnsstatisticsforthespecifiedinboundintegrationendpoint",
        "description": "Operation for retrieving statistics for a specific inbound integration endpoint",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the inbound integration endpoint for which to retrieve the status",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics for the inbound integration endpoint",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Statistics for the inbound integration endpoint",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "numberOfCreatedWorkerProcesses": {
                  "title": "numberOfCreatedWorkerProcesses",
                  "description": "The number of worker processes that have been created for this endpoint",
                  "type": "integer",
                  "format": "int32"
                },
                "nextRun": {
                  "title": "nextRun",
                  "description": "Time for next run (invocation) in yyyy-mm-ddThh:mm:ss&#177hh:mm format. Will be null if no next run is scheduled.",
                  "type": "string"
                },
                "maxWorkerProcessProcessingTimeInSeconds": {
                  "title": "maxWorkerProcessProcessingTimeInSeconds",
                  "description": "Maximum worker process processing time in seconds. Will be null if no processes have run or if the information is not available.",
                  "type": "integer",
                  "format": "int32"
                },
                "enabledOn": {
                  "title": "enabledOn",
                  "description": "Time that the endpoint was enabled in yyyy-mm-ddThh:mm:ss&#177hh:mm format. Will be null for disabled endpoints.",
                  "type": "string"
                },
                "avgWorkerProcessProcessingTimeInSeconds": {
                  "title": "avgWorkerProcessProcessingTimeInSeconds",
                  "description": "Average worker process processing time in seconds. Will be null if no processes have run or if the information is not available.",
                  "type": "integer",
                  "format": "int32"
                },
                "lastRun": {
                  "title": "lastRun",
                  "description": "Time for last run (invocation) in yyyy-mm-ddThh:mm:ss&#177hh:mm format. Will be null if the endpoint has never run.",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified inbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified inbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/inbound-integration-endpoints/{id}/enable": {
      "post": {
        "operationId": "Enablesthespecifiedinboundintegrationendpoint",
        "description": "Operation for enabling an inbound integration endpoint. Can be called regardless of the endpoint status. Endpoints with status 'failed' will be resumed.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the inbound integration endpoint for which to retrieve the status",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified inbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified inbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/inbound-integration-endpoints/{id}/upload-and-invoke": {
      "post": {
        "operationId": "Postsmessage/filetoendpointwithRESTreceiver",
        "description": "Operation for posting a message/file to an inbound integration endpoint with a configured REST receiver and invoking the endpoint. A 400 response is returned if the endpoint does not have a REST-enabled receiver plugin or if the endpoint is not enabled.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "fileName",
            "description": "Optional file name (including extension) for the supplied binary data",
            "required": false,
            "in": "query",
            "default": "unknown",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the inbound integration endpoint for which to retrieve the status",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "multipart/form-data",
            "in": "body",
            "name": "generated",
            "schema": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "body": {
                  "title": "body",
                  "type": "file"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message/file successfully uploaded and endpoint invoked"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied, if operation is invoked for an endpoint that does not have a REST-enabled receiver or if the endpoint is not enabled.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied, if operation is invoked for an endpoint that does not have a REST-enabled receiver or if the endpoint is not enabled.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified inbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified inbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/list-of-values/{id}": {
      "get": {
        "operationId": "ReturnsthelistofvalueswiththespecifiedID",
        "description": "Operation for retrieving information about a specific list of values object. Notice that the response does not contain the list of values value entries. Use GET /lists-of-values/{id}/value-entries to retrieve these as a streamed array.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the list of values for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of values with the specified ID",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The list of values with the specified ID",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "extendable": {
                  "title": "extendable",
                  "description": "Boolean indication of whether it is possible to add values to the list of values via data objects",
                  "type": "boolean"
                },
                "name": {
                  "title": "name",
                  "description": "List of values name",
                  "type": "string"
                },
                "values": {
                  "title": "values",
                  "description": "List of values metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "id": {
                  "title": "id",
                  "description": "ID of the list of values object",
                  "type": "string"
                },
                "usesValueIds": {
                  "title": "usesValueIds",
                  "description": "Boolean indication of whether the list of values uses value IDs",
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified list of values cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified list of values cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/list-of-values/{id}/value-entries": {
      "get": {
        "operationId": "Returnsastreamedarrayofvalueentries(ListOfValuesEntry)",
        "description": "Returns a streamed array of value entries (ListOfValuesEntry) for the list of values with the specified ID.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the list of values for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Stream of value entries (ListOfValuesEntry) for the list of values with the specified ID",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Stream of value entries (ListOfValuesEntry) for the list of values with the specified ID",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListOfValuesEntry"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified list of values cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified list of values cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/object-types/{id}": {
      "get": {
        "operationId": "ReturnstheobjecttypewiththespecifiedID",
        "description": "Operation for retrieving information about a specific object type",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the object type for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The object type with the specified ID",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The object type with the specified ID",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "name": {
                  "title": "name",
                  "description": "Object type name",
                  "type": "string"
                },
                "values": {
                  "title": "values",
                  "description": "Object type metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "id": {
                  "title": "id",
                  "description": "ID of the object type object",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified object type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified object type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/outbound-integration-endpoints": {
      "get": {
        "operationId": "Returnsbasicoutboundintegrationendpointrepresentations",
        "description": "Operation for retrieving an array of basic outbound integration endpoint representations for all accessible endpoints",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of basic outbound integration endpoint representations",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "An array of basic outbound integration endpoint representations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/OutboundIntegrationEndpoint"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/outbound-integration-endpoints/{id}": {
      "parameters": [
        {
          "name": "id",
          "description": "ID of the outbound integration endpoint to disable",
          "required": true,
          "in": "path",
          "type": "string"
        }
      ]
    },
    "/outbound-integration-endpoints/{id}/disable": {
      "post": {
        "operationId": "Disablesthespecifiedoutboundintegrationendpoint",
        "description": "Operation for disabling an outbound integration endpoint. Can be called regardless of the endpoint status.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the outbound integration endpoint to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified outbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified outbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/outbound-integration-endpoints/{id}/invoke": {
      "post": {
        "operationId": "Invokesthespecifiedoutboundintegrationendpoint",
        "description": "Operation for invoking an outbound integration endpoint. Can be called only for endpoints with status 'enabled'.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the outbound integration endpoint to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if operation is invoked for an endpoint that does not have the status 'enabled'.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if operation is invoked for an endpoint that does not have the status 'enabled'.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified outbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified outbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/outbound-integration-endpoints/{id}/execution-report": {
      "get": {
        "operationId": "Returnstheexecutionreportforthespecifiedoutboundintegrationendpoint",
        "description": "Operation for retrieving the execution report for the main process of a specific outbound integration endpoint",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the outbound integration endpoint to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Execution report for the outbound integration endpoint with the specified ID as a stream of ExecutionReportEntries",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Execution report for the outbound integration endpoint with the specified ID as a stream of ExecutionReportEntries",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExecutionReportEntry"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified outbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified outbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/outbound-integration-endpoints/{id}/status": {
      "get": {
        "operationId": "Returnsthestatusofthespecifiedoutboundintegrationendpoint",
        "description": "Operation for retrieving status information for a specific outbound integration endpoint",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the outbound integration endpoint to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status for the outbound integration endpoint",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Status for the outbound integration endpoint",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "status": {
                  "title": "status",
                  "description": "Status for endpoint",
                  "enum": [
                    "enabled",
                    "disabled",
                    "failed"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified outbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified outbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/outbound-integration-endpoints/{id}/worker-processes": {
      "get": {
        "operationId": "ReturnsbackgroundprocessIDsforprocessesstartedbytheendpoint_1",
        "description": "Operation for retrieving background process IDs for processes started by the endpoint. Can be filtered on process status.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "status",
            "description": "Background process status filter",
            "required": false,
            "in": "query",
            "enum": [
              "waiting",
              "running",
              "succeeded",
              "completedwitherrors",
              "failed",
              "suspended",
              "aborted"
            ],
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the outbound integration endpoint to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of background process IDs as a stream",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "Array of background process IDs as a stream",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context, workspace or status information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context, workspace or status information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified outbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified outbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/outbound-integration-endpoints/{id}/enable": {
      "post": {
        "operationId": "Enablesthespecifiedoutboundintegrationendpoint",
        "description": "Operation for enabling an outbound integration endpoint. Can be called regardless of the endpoint status. Endpoints with status 'failed' will be resumed.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the outbound integration endpoint to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified outbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified outbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/outbound-integration-endpoints/{id}/statistics": {
      "get": {
        "operationId": "Returnsstatisticsforthespecifiedoutboundintegrationendpoint",
        "description": "Operation for retrieving statistics for a specific outbound integration endpoint",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the outbound integration endpoint to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics for the outbound integration endpoint",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Statistics for the outbound integration endpoint",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "numberOfCreatedWorkerProcesses": {
                  "title": "numberOfCreatedWorkerProcesses",
                  "description": "The number of worker processes that have been created for this endpoint",
                  "type": "integer",
                  "format": "int32"
                },
                "nextRun": {
                  "title": "nextRun",
                  "description": "Time for next run (invocation) in yyyy-mm-ddThh:mm:ss&#177hh:mm format. Will be null if no next run is scheduled.",
                  "type": "string"
                },
                "maxWorkerProcessProcessingTimeInSeconds": {
                  "title": "maxWorkerProcessProcessingTimeInSeconds",
                  "description": "Maximum worker process processing time in seconds. Will be null if no processes have run or if the information is not available.",
                  "type": "integer",
                  "format": "int32"
                },
                "enabledOn": {
                  "title": "enabledOn",
                  "description": "Time that the endpoint was enabled in yyyy-mm-ddThh:mm:ss&#177hh:mm format. Will be null for disabled endpoints.",
                  "type": "string"
                },
                "avgWorkerProcessProcessingTimeInSeconds": {
                  "title": "avgWorkerProcessProcessingTimeInSeconds",
                  "description": "Average worker process processing time in seconds. Will be null if no processes have run or if the information is not available.",
                  "type": "integer",
                  "format": "int32"
                },
                "lastRun": {
                  "title": "lastRun",
                  "description": "Time for last run (invocation) in yyyy-mm-ddThh:mm:ss&#177hh:mm format. Will be null if the endpoint has never run.",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified outbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified outbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/outbound-integration-endpoints/{id}/queue": {
      "parameters": [
        {
          "name": "id",
          "description": "ID of the outbound integration endpoint to disable",
          "required": true,
          "in": "path",
          "type": "string"
        }
      ]
    },
    "/outbound-integration-endpoints/{id}/queue/status": {
      "get": {
        "operationId": "Returnsthestatusoftheeventqueueassociatedwiththeoutboundintegrationendpoint",
        "description": "Operation for retrieving status information for an event queue associated with an outbound integration endpoint. A 400 response is returned if the endpoint does not have an associated event queue.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the outbound integration endpoint to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status for the event queue",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Status for the event queue",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "enabled": {
                  "title": "enabled",
                  "description": "Is the queue enabled (listening) or not",
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if the endpoint does not have an associated event queue.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if the endpoint does not have an associated event queue.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified outbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified outbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/outbound-integration-endpoints/{id}/queue/number-of-unread-events": {
      "get": {
        "operationId": "Returnsthenumberofunreadeventsfortheassociatedeventqueue_1",
        "description": "Operation for retrieving the number of unread events for event queue associated with a specific outbound integration endpoint. The count will be cached for up to 15 seconds server-side. A 400 response is returned if the endpoint does not have an associated event queue.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the outbound integration endpoint to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The number of unread events",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The number of unread events",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "amount": {
                  "title": "amount",
                  "description": "The amount",
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if the endpoint does not have an associated event queue.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if the endpoint does not have an associated event queue.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified outbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified outbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/outbound-integration-endpoints/{id}/queue/disable": {
      "post": {
        "operationId": "Disablestheeventqueueassociatedwiththeoutboundintegrationendpoint",
        "description": "Operation for disabling an event queue associated with an outbound integration endpoint. A 400 response is returned if the endpoint does not have an associated event queue.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the outbound integration endpoint to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if the endpoint does not have an associated event queue.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if the endpoint does not have an associated event queue.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified outbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified outbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/outbound-integration-endpoints/{id}/queue/enable": {
      "post": {
        "operationId": "Enablestheeventqueueassociatedwiththeoutboundintegrationendpoint",
        "description": "Operation for enabling an event queue associated with an outbound integration endpoint. A 400 response is returned if the endpoint does not have an associated event queue.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the outbound integration endpoint to disable",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if the endpoint does not have an associated event queue.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied or if the endpoint does not have an associated event queue.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified outbound integration endpoint cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified outbound integration endpoint cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/products": {
      "post": {
        "operationId": "CreatesanewproductobjectwithautogeneratedID",
        "description": "Operation for creating a new product object with autogenerated ID. Object type and a parent product must be specified in the request body. Further, an auto ID pattern must be configured for the object type. An \"id\" must not be supplied in the request body.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "A product object",
              "example": {
                "value": {
                  "name": "AC-AXPFX769",
                  "objectType": "SalesItem",
                  "parent": "I-Level3-122",
                  "values": {
                    "CountryOfOrigin": {
                      "value": {
                        "valueId": "GB"
                      }
                    },
                    "UPC": {
                      "value": {
                        "value": 445555555575
                      }
                    }
                  },
                  "references": {
                    "Accessory": {
                      "references": [
                        {
                          "target": "I-SalesItem-1111",
                          "values": {
                            "AccessoryDisplaySequence": {
                              "value": {
                                "value": 1
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Product data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent product ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Product name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the product. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Product values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the product object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the product",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Product created successfully",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Product data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent product ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Product name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the product. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Product values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the product object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the product",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, an auto ID pattern is not configured for the specified object type, if the specified object type is not valid below the specified parent, if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, an auto ID pattern is not configured for the specified object type, if the specified object type is not valid below the specified parent, if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "ReturnstheproductwiththespecifiedID/keyvalue",
        "description": "Operation for retrieving information about a specific product object. The product can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The product with the specified ID / key value",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The product with the specified ID / key value",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Product data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent product ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Product name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the product. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Product values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the product object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the product",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "patch": {
        "operationId": "Partiallyupdatesaproduct",
        "description": "Operation for updating multiple properties with a single request. The product to update can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its value for the specified key. Contrary to the PUT /products/{id} replace operation, this operation will only modify data present in the supplied request body.<br/>For both single and multivalued attributes, if a value representation is present in the request body, the existing value will be overwritten. Notice however that supplying the property \"contextLocal\" with the value \"false\" or the SingleValue \"calculated\" property with the value \"true\" will cause a value update to be ignored.<br/>For single valued reference types (incl. classification product link types owned by the product side), existing references will be replaced with those provided in the request body. For multivalued reference types, if references in the request body match existing references, these will be replaced. Otherwise references in the request body will be added (i.e. existing references not in the request body will not be removed). As with values, if the property \"contextLocal\" is supplied with the value \"false\" for a reference, the update will be ignored.<br/>If \"parent\" information is supplied, the product will be moved below the specified parent given that it differs from the current.<br/>Data containers can only be updated if auto IDs are configured for the data container type. For single valued data container types, existing data container objects will be replaced with the data container object in the request body. For multi valued data container types, data container objects in the request body will be added.<br/>For attribute links, supplied attribute links will either be added or will replace existing links.<br/>This resource operation does not allow for the product object type to be updated. If an ID is supplied in the request body, it must match the ID of the product identified via the URL.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product to update. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "A product object",
              "example": {
                "value": {
                  "name": "Fender AM Ori­ginal 60 Strat RW OW",
                  "values": {
                    "Body": {
                      "value": {
                        "value": "Alder"
                      }
                    },
                    "Neck": {
                      "value": {
                        "value": "Maple"
                      }
                    }
                  }
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Product data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent product ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Product name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the product. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Product values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the product object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the product",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product object successfully updated",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Product object successfully updated",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Product data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent product ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Product name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the product. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Product values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the product object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the product",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "operationId": "CreatesorreplacesproductwithknownID",
        "description": "Operation for replacing an existing product or creating a new product with known ID. To avoid accidental replacement of existing products, replacement will only be performed if the value \"true\" is supplied for the \"allow-overwrite\" query parameter. A 400 response is returned if the value for \"allow-overwrite\" is \"false\" and a product with the specified ID already exists. When replacing, any data that is local to the working context (or not dimension dependent) and for which the client has write permissions will be overwritten and replaced with the data provided in the request body. Object type and parent must always be specified in the request body. For the replace case, the product can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its value for the specified key. A STEP ID is required for creating a new product via this resource operation and a 400 response will therefore be returned if a \"keyId\" is supplied and the object does not exist in advance. If an ID is supplied in the request body, it must match the ID of the product identified via the URL.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "allow-overwrite",
            "description": "Specifies whether the product may be overwritten / replaced if it already exists. Defaults to \"false\".",
            "required": false,
            "in": "query",
            "default": false,
            "type": "boolean"
          },
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product to replace. If supplied, a key value should be supplied for the \"id\" path parameter. Cannot be used in combination with \"allow-overwrite=true\".",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "A product object",
              "example": {
                "value": {
                  "name": "Fender AM Ori­ginal 60 Strat RW OW",
                  "objectType": "SalesItem",
                  "parent": "ElectricGuitars",
                  "values": {
                    "Body": {
                      "value": {
                        "value": "Alder"
                      }
                    },
                    "Neck": {
                      "value": {
                        "value": "Maple"
                      }
                    }
                  }
                }
              },
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Product data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent product ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Product name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the product. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Product values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the product object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the product",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product object successfully replaced",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Product object successfully replaced",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "dataContainers": {
                  "title": "dataContainers",
                  "description": "Product data containers. Keys are data container type IDs and values either a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "parent": {
                  "title": "parent",
                  "description": "Parent product ID",
                  "type": "string"
                },
                "name": {
                  "title": "name",
                  "description": "Product name",
                  "type": "string"
                },
                "references": {
                  "title": "references",
                  "description": "References / links from the product. Keys are reference / link type IDs and values either a SingleReference or a MultiReference depending on whether the reference type is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "values": {
                  "title": "values",
                  "description": "Product values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "objectType": {
                  "title": "objectType",
                  "description": "Object type ID",
                  "type": "string"
                },
                "id": {
                  "title": "id",
                  "description": "ID of the product object",
                  "type": "string"
                },
                "attributeLinks": {
                  "title": "attributeLinks",
                  "description": "Attribute links from the product",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AttributeLink"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, a product with the specified ID already exists and the value for the query parameter \"allow-overwrite\" is \"false\", if a \"keyId\" is supplied and \"allow-overwrite\" is \"true\", if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, a product with the specified ID already exists and the value for the query parameter \"allow-overwrite\" is \"false\", if a \"keyId\" is supplied and \"allow-overwrite\" is \"true\", if insufficient or erroneous information is provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "operationId": "DeletestheproductwiththespecifiedID/keyvalue",
        "description": "Operation for deleting a specific product. Operation can only be invoked in editable workspaces and will if successful move the product to the recycle bin. The product can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product successfully deleted (moved to recycle bin)"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the product cannot be deleted due to constraints like e.g. the product having children or the existence of references pointing to the product, if invalid context or workspace information is supplied or if the operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the product cannot be deleted due to constraints like e.g. the product having children or the existence of references pointing to the product, if invalid context or workspace information is supplied or if the operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/products/{id}/values/{attributeId}": {
      "get": {
        "operationId": "Returnsthevalueforaproductattribute",
        "description": "Returns the value for the specified attribute. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued. The product can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to retrieve the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "operationId": "Deletesthevalueforaproductattribute",
        "description": "Operation for deleting a product attribute value. Notice that it is only possible to delete non-calculated, locally defined values. The product can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to retrieve the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "operationId": "Replacesthevalueforaproductattribute",
        "description": "Operation for replacing a product attribute value. Request body must be either a SingleValue or a MultiValue depending on whether the attribute is multivalued. Notice that supplying the property \"contextLocal\" with the value \"false\" or the SingleValue \"calculated\" property with the value \"true\" will cause the value update to be ignored. The product can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to retrieve the value",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "text/plain",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/products/{id}/data-containers/{dataContainerTypeId}": {
      "get": {
        "operationId": "Returnsdatacontainer(s)ofthespecifiedtype_1",
        "description": "Returns data container(s) of the specified type. Response will either be a SingleDataContainer or a MultiDataContainer depending on whether the data container type is multivalued. The product can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "dataContainerTypeId",
            "description": "ID of the data container type",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Either a MultiDataContainer or SingleDataContainer depending on whether the specified data container type is multivalued",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "Either a MultiDataContainer or SingleDataContainer depending on whether the specified data container type is multivalued"
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product or data container type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product or data container type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/products/{id}/approve": {
      "post": {
        "operationId": "ApprovestheproductwiththespecifiedID/keyvalue",
        "description": "Operation for approving a product. The operation can only be invoked in the Main workspace and a 400 response will be returned if the operation is invoked in another workspace. A 400 response is also returned if the product could not be approved, for instance due to a constraint (e.g. parent not present in Approved) or due to the approval being rejected by a business condition. The product to approve can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product successfully approved. Notice that the product may only have been partially approved. In this case the response will hold information about the part objects that could not be synchronized to the Approved workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Product successfully approved. Notice that the product may only have been partially approved. In this case the response will hold information about the part objects that could not be synchronized to the Approved workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "messages": {
                  "title": "messages",
                  "description": "Messages related to part objects that could not be synchronized to the Approved workspace",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the operation is invoked in a workspace different from Main, if the approval could not be performed or if invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the operation is invoked in a workspace different from Main, if the approval could not be performed or if invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/products/{id}/incoming-references/{referenceTypeId}": {
      "get": {
        "operationId": "Returnsstreamofincomingreferencesofthespecifiedtype_3",
        "description": "Returns an array of incoming references (IncomingReferenceEntry) of the specified type as a stream. Notice that this resource covers both \"cross references\" and \"classification product links\" owned by the product side. The product can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve incoming references",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of incoming references of the specified type as a stream",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "An array of incoming references of the specified type as a stream",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IncomingReferenceEntry"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product or reference type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product or reference type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/products/{id}/children": {
      "get": {
        "operationId": "ReturnsastreamedarrayofIDsforproductchildren",
        "description": "Returns a streamed array of IDs for products directly below the specified product. The product can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A streamed array of IDs for products directly below the specified product",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "A streamed array of IDs for products directly below the specified product",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/products/{id}/approval-status": {
      "get": {
        "operationId": "ReturnstheapprovalstatusoftheproductwiththespecifiedID/keyvalue",
        "description": "Operation for retrieving the approval status of a product. The product can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product approval status",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Product approval status",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "approvalStatus": {
                  "title": "approvalStatus",
                  "description": "The status",
                  "enum": [
                    "NotInApproved",
                    "PartlyApproved",
                    "ContextApproved",
                    "CompletelyApproved"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/products/{id}/references": {
      "parameters": [
        {
          "name": "id",
          "description": "ID / key value of the product for which to retrieve data",
          "required": true,
          "in": "path",
          "type": "string"
        }
      ]
    },
    "/products/{id}/references/{referenceTypeId}": {
      "get": {
        "operationId": "Returnsreference(s)ofthespecifiedtype_3",
        "description": "Returns local reference(s) of the specified type owned by the product. Response will either be a SingleReference or a MultiReference depending on whether the reference type is multivalued. Notice that this resource covers both \"cross references\" and  \"classification product links\" owned by the product side. The product can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Either a MultiReference or SingleReference depending on whether the specified reference type is multivalued",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "Either a MultiReference or SingleReference depending on whether the specified reference type is multivalued"
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product or reference type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product or reference type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/products/{id}/references/{referenceTypeId}/{targetId}": {
      "put": {
        "operationId": "Replacesareference_3",
        "description": "Replaces the specified reference. If a locally defined reference to the same target already exists or if the reference type is single-valued and a locally defined reference from the source already exists, the \"allow-overwrite\" query parameter must be set to \"true\" in order for the existing reference to be replaced. Notice that this resource covers both \"cross references\" and \"classification product links\" owned by the product side. The product that owns / will own the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key. Notice that if \"target\" or \"targetType\" is supplied in the request body, the values must match the reference type and the STEP ID of the target specified in the URL. If the property \"contextLocal\" is supplied with the value \"false\", the update will be ignored.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product that owns / will own the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "allow-overwrite",
            "description": "Specifies whether existing references may be overwritten. This includes references of the same type to the same target and for single-valued reference types, references of the same type to any target. Defaults to \"false\".",
            "required": false,
            "in": "query",
            "default": false,
            "type": "boolean"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "An atomic reference. Can represent both a \"cross reference\" and a \"classification product link\".",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contextLocal": {
                  "title": "contextLocal",
                  "description": "Indicates whether the reference is set locally or inherited from a dimension point / a combination dimension points different from the ones used for current context. Should not be supplied for reference updates. If supplied with the value \"false\", the update will be skipped.",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "target": {
                  "title": "target",
                  "description": "ID of the target object",
                  "type": "string"
                },
                "targetType": {
                  "title": "targetType",
                  "description": "Target \"supertype\"",
                  "enum": [
                    "product",
                    "classification",
                    "asset",
                    "entity"
                  ],
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The updated reference (ReferenceEntry). Returned when a local reference to the target existed in advance.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The updated reference (ReferenceEntry). Returned when a local reference to the target existed in advance.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contextLocal": {
                  "title": "contextLocal",
                  "description": "Indicates whether the reference is set locally or inherited from a dimension point / a combination dimension points different from the ones used for current context. Should not be supplied for reference updates. If supplied with the value \"false\", the update will be skipped.",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "target": {
                  "title": "target",
                  "description": "ID of the target object",
                  "type": "string"
                },
                "targetType": {
                  "title": "targetType",
                  "description": "Target \"supertype\"",
                  "enum": [
                    "product",
                    "classification",
                    "asset",
                    "entity"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, a/the reference exists and value for the query parameter \"allow-overwrite\" is \"false\", If the reference cannot be successfully created / updated based on information provided in the request body, if invalid context or workspace information is supplied, if operation is invoked in a terminated workspace or if \"target\" or \"targetType\" is supplied and the values do not match the target ID and reference type specified in the URL",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, a/the reference exists and value for the query parameter \"allow-overwrite\" is \"false\", If the reference cannot be successfully created / updated based on information provided in the request body, if invalid context or workspace information is supplied, if operation is invoked in a terminated workspace or if \"target\" or \"targetType\" is supplied and the values do not match the target ID and reference type specified in the URL",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product, reference type or target cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product, reference type or target cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "get": {
        "operationId": "Returnsaspecificreference_3",
        "description": "Returns the local reference (ReferenceEntry) of specified type from specified product to specified target. Notice that this resource covers both \"cross references\" and \"classification product links\" owned by the product side. The product that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A reference (ReferenceEntry) of specified type from specified product to specified target",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "A reference (ReferenceEntry) of specified type from specified product to specified target",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "contextLocal": {
                  "title": "contextLocal",
                  "description": "Indicates whether the reference is set locally or inherited from a dimension point / a combination dimension points different from the ones used for current context. Should not be supplied for reference updates. If supplied with the value \"false\", the update will be skipped.",
                  "type": "boolean"
                },
                "values": {
                  "title": "values",
                  "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "target": {
                  "title": "target",
                  "description": "ID of the target object",
                  "type": "string"
                },
                "targetType": {
                  "title": "targetType",
                  "description": "Target \"supertype\"",
                  "enum": [
                    "product",
                    "classification",
                    "asset",
                    "entity"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product, reference type, target or reference cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product, reference type, target or reference cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "delete": {
        "operationId": "Deletesthereference_3",
        "description": "Deletes the specified reference. Notice that it is only possible to delete references that are defined locally (\"contextLocal\": true). Further notice that this resource covers both \"cross references\" and \"classification product links\" owned by the product side. The product that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Reference successfully deleted"
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the reference cannot be deleted due to a constraint, if an attempt is made to delete a reference that is not defined locally or if invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the reference cannot be deleted due to a constraint, if an attempt is made to delete a reference that is not defined locally or if invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product, reference type, target or reference cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product, reference type, target or reference cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/products/{id}/references/{referenceTypeId}/{targetId}/values/{attributeId}": {
      "delete": {
        "operationId": "Deletesthevalueforareferencemetadataattribute_3",
        "description": "Operation for deleting the value of an attribute on a reference. Notice that it is only possible to delete non-calculated values on references that are defined locally (\"contextLocal\": true). Further notice that this resource covers values on both \"cross references\" and \"classification product links\" owned by the product side. The product that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to delete the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied, if an attempt is made to delete a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully deleted, if invalid context or workspace information is supplied, if an attempt is made to delete a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product, reference type, target, reference or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product, reference type, target, reference or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "put": {
        "operationId": "Replacesthevalueforareferencemetadataattribute_3",
        "description": "Operation for replacing the value of an attribute on a local reference. It is only possible to replace values on references that are defined locally (\"contextLocal\": true). Request body must be either a SingleValue or a MultiValue depending on whether the attribute is multivalued. Notice that supplying the property \"contextLocal\" with the value \"false\" or the SingleValue \"calculated\" property with the value \"true\" will cause the value update to be ignored. Further notice that this resource covers values on both \"cross references\" and \"classification product links\" owned by the product side. The product that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to delete the value",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "x-amf-mediaType": "text/plain",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "type": "object",
              "additionalProperties": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The updated value. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied, if an attempt is made to update a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, the value cannot be successfully updated based on information provided in the request body, if invalid context or workspace information is supplied, if an attempt is made to update a value on a reference that is not locally defined or if operation is invoked in a terminated workspace.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product, reference type, target, reference or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product, reference type, target, reference or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      },
      "get": {
        "operationId": "Returnsthevalueforareferencemetadataattribute_3",
        "description": "Returns the value for the specified attribute for the specified local reference. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued. Notice that this resource covers both \"cross references\" and \"classification product links\" owned by the product side. The product that owns the reference can be identified either by its STEP ID or if a value for the \"keyId\" query parameter is supplied, by its key value for the specified key. Likewise, the reference target can be identified either by its STEP ID or if a value for the \"targetKeyId\" query parameter is supplied, by its key value for the specified key.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "keyId",
            "description": "ID of the key definition to be used for identifying the product that owns the reference. If supplied, a key value should be supplied for the \"id\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "targetKeyId",
            "description": "ID of the key definition to be used for identifying the reference target. If supplied, a key value should be supplied for the \"targetId\" path parameter.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID / key value of the product for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "referenceTypeId",
            "description": "ID of the reference type for which to retrieve references",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "targetId",
            "description": "ID / key value of the desired reference target",
            "required": true,
            "in": "path",
            "type": "string"
          },
          {
            "name": "attributeId",
            "description": "ID of the attribute for which to delete the value",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued.",
            "x-amf-mediaType": "text/plain",
            "schema": {
              "title": "response",
              "description": "The value for the attribute with the specified ID. Will either be an instance of SingleValue or MultiValue depending on whether the attribute is multivalued."
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified product, reference type, target, reference or attribute cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified product, reference type, target, reference or attribute cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/products/search": {
      "post": {
        "operationId": "Searchfor/queryproducts",
        "description": "Operation for querying products. Resource operation will return a maximum of 1000 results. Notice that while the query can be made arbitrarily complex with multiple levels of nested AND and OR conditions, such complex queries will not perform well.",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "x-amf-mediaType": "application/json",
            "in": "body",
            "name": "generated",
            "schema": {
              "title": "body",
              "description": "A query specification. Nested condition can be a compound condition. See \"Condition\" for more information.",
              "example": {
                "condition": {
                  "conditionType": "and",
                  "conditions": [
                    {
                      "conditionType": "simplebelow",
                      "topNodeId": "I-Level2-13",
                      "topNodeType": "product"
                    },
                    {
                      "conditionType": "objecttype",
                      "objectType": "SalesItem"
                    }
                  ]
                }
              },
              "type": "object",
              "additionalProperties": true,
              "required": [
                "condition"
              ],
              "properties": {
                "condition": {
                  "title": "condition",
                  "description": "An \"abstract\" representation of a condition. Must always either be an AndCondition, an OrCondition, an IdCondition, a NameCondition, a TextValueCondition, a NumericValueCondition, an ObjectTypeCondition, a SimpleBelowCondition, an LovValueCondition, a HasReferenceToCondition or a HasDataContainerObjectCondition.",
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "conditionType": {
                      "title": "conditionType",
                      "enum": [
                        "and",
                        "or",
                        "id",
                        "name",
                        "textvalue",
                        "numericvalue",
                        "objecttype",
                        "simplebelow",
                        "lovvalue",
                        "hasreferenceto",
                        "hasdatacontainerobject"
                      ],
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of query results as a stream",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "Array of query results as a stream",
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryResult"
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/reference-types/{id}": {
      "get": {
        "operationId": "ReturnsthereferencetypewiththespecifiedID",
        "description": "Operation for retrieving information about a specific reference type object. Notice that this resource covers both \"cross reference types\" and \"classification product link types\".",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the reference type for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The reference type with the specified ID",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The reference type with the specified ID",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "validTargetObjectTypes": {
                  "title": "validTargetObjectTypes",
                  "description": "IDs of the valid target object types",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "name": {
                  "title": "name",
                  "description": "Reference type name",
                  "type": "string"
                },
                "values": {
                  "title": "values",
                  "description": "Reference type metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "id": {
                  "title": "id",
                  "description": "ID of the reference type object",
                  "type": "string"
                },
                "multivalued": {
                  "title": "multivalued",
                  "description": "Boolean indication of whether multiple references / links from a single source are allowed. Notice that a \"classification product link type\" always will be multivalued when seen from the classification side.",
                  "type": "boolean"
                },
                "productClassificationLinkType": {
                  "title": "productClassificationLinkType",
                  "description": "Boolean indication of whether the type is a \"classification product link type\" as opposed to a \"cross reference type\"",
                  "type": "boolean"
                },
                "validSourceObjectTypes": {
                  "title": "validSourceObjectTypes",
                  "description": "IDs of the valid source object types",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified reference type cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified reference type cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    },
    "/units/{id}": {
      "get": {
        "operationId": "ReturnstheunitwiththespecifiedID",
        "description": "Operation for retrieving information about a specific unit object",
        "x-x-tags": [],
        "parameters": [
          {
            "name": "context",
            "description": "ID of the context in which to perform the operation",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "workspace",
            "description": "ID of the workspace in which to perform the operation. Defaults to \"Main\".",
            "required": false,
            "in": "query",
            "default": "Main",
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the unit for which to retrieve data",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The unit with the specified ID",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "response",
              "description": "The unit with the specified ID",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "name": {
                  "title": "name",
                  "description": "Unit name",
                  "type": "string"
                },
                "values": {
                  "title": "values",
                  "description": "Unit metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
                  "type": "object",
                  "additionalProperties": true,
                  "patternProperties": {
                    "^.*$": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                },
                "id": {
                  "title": "id",
                  "description": "ID of the unit object",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "Error caused by client. Returned if, for instance, invalid context or workspace information is supplied.",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "If the specified unit cannot be found",
            "x-amf-mediaType": "application/json",
            "schema": {
              "title": "Error",
              "description": "If the specified unit cannot be found",
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "httpReason": {
                  "title": "httpReason",
                  "description": "The name of the HTTP status code",
                  "type": "string"
                },
                "httpStatus": {
                  "title": "httpStatus",
                  "description": "The HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "title": "message",
                  "description": "Extended error information. Notice that error messages may change without warning and that programming logic should not rely upon the content of the message.",
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ]
      }
    }
  },
  "x-roles": [],
  "definitions": {
    "IncomingReferenceEntry": {
      "title": "IncomingReferenceEntry",
      "description": "An atomic reference seen from the reference target. Can represent both a \"cross reference\" and a \"classifictaion product link\".",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "source": {
          "title": "source",
          "description": "ID of the reference source",
          "type": "string"
        },
        "sourceType": {
          "title": "sourceType",
          "description": "Source \"supertype\"",
          "enum": [
            "product",
            "classification",
            "entity",
            "asset"
          ],
          "type": "string"
        },
        "values": {
          "title": "values",
          "description": "Reference metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
          "type": "object",
          "additionalProperties": true,
          "patternProperties": {
            "^.*$": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "QueryResult": {
      "title": "QueryResult",
      "description": "A query result. The \"type\" and \"id\" combined uniquely identifies an object in STEP.",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "type": {
          "title": "type",
          "description": "The result supertype",
          "enum": [
            "asset",
            "classification",
            "entity",
            "product"
          ],
          "type": "string"
        },
        "id": {
          "title": "id",
          "description": "The result id",
          "type": "string"
        }
      }
    },
    "BackgroundProcessAttachmentMetadata": {
      "title": "BackgroundProcessAttachmentMetadata",
      "description": "Background process attachment metadata",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "id": {
          "title": "id",
          "description": "ID of the background process attachment",
          "type": "string"
        },
        "name": {
          "title": "name",
          "description": "Name of the background process attachment",
          "type": "string"
        },
        "mimeType": {
          "title": "mimeType",
          "description": "Mime type of the background process attachment",
          "type": "string"
        },
        "originalAttachmentId": {
          "title": "originalAttachmentId",
          "description": "Original ID of the background process attachment. Please remember that this ID does not have to be unique - same ID can be used by multiple attachments if the attachment holds multiple files",
          "type": "string"
        },
        "description": {
          "title": "description",
          "description": "Description of the background process attachment",
          "type": "string"
        }
      }
    },
    "ExecutionReportEntry": {
      "title": "ExecutionReportEntry",
      "description": "A single execution report entry/row",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "entryType": {
          "title": "entryType",
          "description": "The type of entry. Either 'info', 'warning' or 'error'.",
          "enum": [
            "info",
            "warning",
            "error"
          ],
          "type": "string"
        },
        "entryText": {
          "title": "entryText",
          "description": "The entry text/message",
          "type": "string"
        }
      }
    },
    "BackgroundProcessType": {
      "title": "BackgroundProcessType",
      "description": "Background process type",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "id": {
          "title": "id",
          "description": "ID of the background process type",
          "type": "string"
        }
      }
    },
    "AttributeLink": {
      "title": "AttributeLink",
      "description": "A link between a product or a classification and a specification attribute",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "attribute": {
          "title": "attribute",
          "description": "ID of the attribute that the link points to",
          "type": "string"
        },
        "values": {
          "title": "values",
          "description": "Attribute link metadata values. Keys are attribute IDs and values either a SingleValue or a MultiValue depending on whether the attribute is multivalued.",
          "type": "object",
          "additionalProperties": true,
          "patternProperties": {
            "^.*$": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "EventProcessor": {
      "title": "EventProcessor",
      "description": "Event processor representation",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "id": {
          "title": "id",
          "description": "ID of the event processor",
          "type": "string"
        },
        "name": {
          "title": "name",
          "description": "Name of the event processor",
          "type": "string"
        }
      }
    },
    "InboundIntegrationEndpoint": {
      "title": "InboundIntegrationEndpoint",
      "description": "Inbound integration endpoint representation",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "id": {
          "title": "id",
          "description": "ID of the inbound integration endpoint",
          "type": "string"
        },
        "name": {
          "title": "name",
          "description": "Name of the inbound integration endpoint",
          "type": "string"
        }
      }
    },
    "ListOfValuesEntry": {
      "title": "ListOfValuesEntry",
      "description": "A value entry for a list of values",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "value": {
          "title": "value",
          "description": "The \"value\" part of the value",
          "type": "string"
        },
        "valueId": {
          "title": "valueId",
          "description": "The value ID (for lists of values that use value IDs)",
          "type": "string"
        },
        "unit": {
          "title": "unit",
          "description": "Unit ID",
          "type": "string"
        }
      }
    },
    "OutboundIntegrationEndpoint": {
      "title": "OutboundIntegrationEndpoint",
      "description": "Outbound integration endpoint representation",
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "id": {
          "title": "id",
          "description": "ID of the outbound integration endpoint",
          "type": "string"
        },
        "name": {
          "title": "name",
          "description": "Name of the outbound integration endpoint",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "auth": {
      "type": "basic"
    }
  }
}
